{"version":3,"sources":["img/orinda-books-logo.png","components/error-boundary/ErrorBoundary.js","components/buttons/LoginButton.js","components/auth/Login.js","actions/authActions.js","actions/types.js","components/pages/Landing.js","actions/modalActions.js","components/auth/LogoutModalContent.js","components/modal/ModalXButton.js","components/auth/LogoutModal.js","components/general/HomeLogo.js","components/navigation/DashboardNavigation.js","components/auth/Logout.js","components/navigation/Sidebar.js","components/widgets/WidgetTitle.js","components/widgets/OrdersWidget.js","components/widgets/StaffWidget.js","components/widgets/SalesWidget.js","components/widgets/InventoryWidget.js","components/widgets/SearchWidget.js","components/widgets/Widgets.js","components/pages/Dashboard.js","components/buttons/EditButton.js","components/navigation/IconNavigation.js","components/navigation/IconSidebar.js","components/titles/ProfileTitle.js","components/general/ProfilePic.js","components/profile/profile/ProfileDetails.js","components/pages/profile/Profile.js","components/buttons/InputSaveButton.js","components/profile/profile/ProfileInputDetails.js","components/pages/profile/EditProfile.js","helpers/dateFuncs.js","components/buttons/InputAddButton.js","components/profile/tasks/modal/AddTaskModalContent.js","components/profile/tasks/modal/EditTaskModalContent.js","components/profile/tasks/CheckTaskIcon.js","components/profile/tasks/DeleteTaskIcon.js","components/profile/tasks/EditTaskIcon.js","components/profile/tasks/modal/ViewTaskModalContent.js","components/profile/tasks/modal/TaskModal.js","components/profile/tasks/TaskCard.js","components/profile/tasks/EmptyTasksContent.js","components/general/PlusIcon.js","components/profile/tasks/AddNewTask.js","components/profile/tasks/TasksContent.js","components/pages/profile/Tasks.js","components/profile/events/EventsCalendar.js","actions/eventActions.js","components/profile/events/DetailEventInfo.js","components/general/Spinner.js","components/profile/events/UpcomingEventsInfo.js","components/profile/events/EventsContent.js","components/profile/events/modal/AddEventContent.js","components/profile/events/modal/ViewEventContent.js","components/profile/events/modal/EventsModal.js","components/pages/profile/Events.js","actions/editActions.js","components/profile/settings/UserSettings.js","components/pages/profile/Settings.js","components/pages/profile/EditSettings.js","components/titles/AdminTitle.js","components/admin/orders/AddOrderGroup.js","components/navigation/DropdownNavigation.js","components/buttons/ViewDetailsButton.js","components/admin/orders/table/filled/FilledOrderItem.js","components/admin/orders/table/filled/NoSearchTable.js","components/admin/orders/table/filled/SearchTable.js","components/admin/orders/table/TableHeading.js","components/admin/orders/table/filled/FilledTable.js","components/modal/ModalCloseButton.js","components/admin/inventory/modal/DoughnutChart.js","components/admin/inventory/modal/SummaryModal.js","components/admin/inventory/modal/ViewItemModal.js","components/admin/inventory/modal/InventoryModalBody.js","components/admin/staff/modal/AddMemberModal.js","components/buttons/LinkButton.js","components/admin/staff/modal/EditMemberForm.js","components/admin/staff/modal/EditMemberContent.js","components/admin/staff/modal/DeleteMemberIcon.js","components/admin/staff/modal/ViewMemberContent.js","components/admin/staff/modal/ViewDetailsModal.js","components/admin/staff/modal/StaffModal.js","components/admin/orders/modal/ViewFilledModal.js","components/admin/orders/modal/ViewUnfilledModal.js","components/admin/orders/modal/AddOrderModal.js","components/admin/orders/modal/OrdersModal.js","components/admin/sales/modal/SalesModal.js","components/modal/ModalBody.js","components/modal/Modal.js","components/general/SearchIcon.js","actions/searchActions.js","components/general/SearchInputGroup.js","components/admin/orders/table/unfilled/UnfilledOrderItem.js","components/admin/orders/table/unfilled/NoSearchTable.js","components/admin/orders/table/unfilled/SearchTable.js","components/admin/orders/table/unfilled/UnfilledTable.js","components/navigation/WidgetNavigation.js","components/pages/admin/Orders.js","components/admin/sales/TableHeading.js","components/admin/sales/SalesTableItem.js","components/admin/sales/SalesTable.js","components/admin/sales/SalesGraph.js","components/pages/admin/Sales.js","components/admin/staff/AddMemberGroup.js","components/admin/staff/table/StaffListMember.js","components/admin/staff/table/StaffTable.js","components/pages/admin/Staff.js","components/admin/search/SearchItem.js","components/admin/search/SearchResults.js","components/admin/search/SearchOptions.js","components/admin/search/SearchSettings.js","components/pages/admin/Search.js","components/admin/inventory/table/InventoryItem.js","components/admin/inventory/table/NoSearchTable.js","components/admin/inventory/table/SearchTable.js","components/admin/inventory/table/TableHeadings.js","components/admin/inventory/table/InventoryTable.js","components/admin/inventory/InventoryProgressBar.js","components/admin/inventory/SummaryInfo.js","components/pages/admin/Inventory.js","App.js","config/firebaseConfig.js","reducers/authReducer.js","reducers/editReducer.js","reducers/eventReducer.js","reducers/searchReducer.js","reducers/modalReducer.js","reducers/index.js","store.js","index.js","img/widgets/search.png","img/widgets/orders.png","img/widgets/staff.png","img/widgets/sales.png","img/widgets/inventory.png"],"names":["module","exports","__webpack_require__","p","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","children","react_default","a","createElement","className","Component","LoginButton","_ref","onClick","type","connect","_ref2","auth_error","auth","logIn","credentials","dispatch","getState","getFirebase","signInWithEmailAndPassword","email","password","catch","err","payload","_useState","useState","_useState2","slicedToArray","setEmail","_useState3","_useState4","setPassword","handleChange","e","target","value","Fragment","placeholder","name","required","onChange","message","buttons_LoginButton","preventDefault","handleClick","firebase","uid","react_router","to","error_boundary_ErrorBoundary","auth_Login","setViewingItem","item","toggleModal","modalType","view_item","modal","logOut","signOut","resetPassword","_ref3","currentUser","updatePassword","useEffect","document","addEventListener","clickFunction","contains","querySelector","removeEventListener","modal_ModalXButton","auth_LogoutModalContent","HomeLogo","src","Logo","concat","alt","DashboardNavigation","react_router_dom","Sidebar","general_HomeLogo","navigation_DashboardNavigation","auth_Logout","WidgetTitle","OrdersWidget","OrdersImg","widgets_WidgetTitle","StaffWidget","StaffImg","SalesWidget","SalesImg","InventoryWidget","InventoryImg","SearchWidget","SearchImg","Widgets","widgets_OrdersWidget","widgets_StaffWidget","widgets_SalesWidget","widgets_InventoryWidget","widgets_SearchWidget","modal_open","content","auth_LogoutModal","navigation_Sidebar","EditButton","id","withRouter","pathname","location","IconSidebar","navigation_IconNavigation","ProfileTitle","photoUrl","profile","_ref$profile","firstName","lastName","phone","position","general_ProfilePic","push","history","navigation_IconSidebar","titles_ProfileTitle","profile_ProfileDetails","buttons_EditButton","InputSaveButton","defaultProps","ProfileInputDetails","onSubmitHandler","_this$props","updProfile","firstNameInput","current","lastNameInput","emailInput","positionInput","phoneInput","updateProfile","React","createRef","balanceInput","_this2","_this$props$profile","onSubmit","htmlFor","defaultValue","ref","buttons_InputSaveButton","firebaseConnect","_ref2$firebase","profile_ProfileInputDetails","getDate","status","date","Date","mm","getMonth","dd","yyyy","getFullYear","calendarDateStandardizer","dateChars","toString","split","validateFormat","match","InputAddButton","compose","tasks","firestoreConnect","firestore","title","setTitle","deadline","setDeadline","_useState5","_useState6","notes","setNotes","getElementById","classList","style","display","checked","uuid","tasksUpd","update","collection","doc","maxLength","buttons_InputAddButton","EditTaskModalContent","deadlineInput","map","task","titleInput","notesInput","_this$props$view_item","_ref$firebase","clickHandler","filter","setModalType","_ref$view_item","tasks_CheckTaskIcon","tasks_EditTaskIcon","tasks_DeleteTaskIcon","modal_type","modalContent","modal_AddTaskModalContent","modal_ViewTaskModalContent","modal_EditTaskModalContent","_ref$task","nodeName","PlusIcon","general_PlusIcon","tasks_AddNewTask","tasks_TaskCard","key","tasks_EmptyTasksContent","modal_TaskModal","tasks_TasksContent","setDetailEvent","event","events","entry_default","minDetail","onClickDay","dateOf","showNeighboringMonth","tileContent","element","tileDate","reduce","acc","curr","forEach","detail_event","length","time","Spinner","UpcomingEventsInfo","sortedEvents","todayReversed","reverse","join","noPastDates","sort","b","aa","bb","general_Spinner","ordered","events_EventsCalendar","events_UpcomingEventsInfo","events_DetailEventInfo","setTime","_useState7","_useState8","setDateOf","newEvent","add","submitHandler","cols","rows","modal_AddEventContent","modal_ViewEventContent","modal_EventsModal","events_EventsContent","setEditType","edit_type","edit","changePassword","setTimeout","settings_UserSettings","AdminTitle","dropdownState","dropdownStateFunc","menu","clickFunc","tagName","toLowerCase","ViewDetailsButton","_ref$item","book","quantity","buttons_ViewDetailsButton","filledOrders","isLoaded","isEmpty","filled_FilledOrderItem","filledFiltered","searchVal","TableHeading","_ref2$search","search","search_value","secondary_search_value","table_TableHeading","filled_SearchTable","filled_NoSearchTable","DoughnutChart","books","subgenres","determineSubgenres","subgenre","total","labels","data","datasets","backgroundColor","react_chartjs_2_es","options","legend","boxWidth","fontFamily","fontSize","orderBy","totalInventory","setTotalInventory","totalTitles","setTotalTitles","totalSaleValue","setTotalSaleValue","mostStocked","determineMostStocked","parseFloat","salePrice","substring","toFixed","author","modal_DoughnutChart","ModalCloseButton","genre","publicationDate","imageLocation","isbn","inventoryModalBody","modal_SummaryModal","ViewItemModal","setFirstName","surname","setSurname","dob","setDob","_useState9","_useState10","setPosition","_useState11","_useState12","permissions","setPermissions","_useState13","_useState14","image","setImage","storageRef","storage","put","on","console","warn","snapshot","getDownloadURL","then","downloadURL","newMember","dateAdded","fullName","files","EditMemberForm","delete","updMember","dobInput","surnameInput","_this$props$view_item2","buttons_LinkButton","modal_EditMemberForm","member","modal_DeleteMemberIcon","modal_EditMemberContent","modal_ViewMemberContent","staffModal","modal_ViewDetailsModal","modal_AddMemberModal","company","filledDate","_ref$view_item$book","toBeFilled","filledOrder","setAuthor","setIsbn","setPublish","setGenre","setSubgenre","setQuantity","_useState15","_useState16","setCompany","inputWarning","isbnLength","isbnInput","quantityInput","parseInt","innerHTML","order","min","max","ordersModal","modal_ViewFilledModal","modal_ViewUnfilledModal","modal_AddOrderModal","modalBody","modal_InventoryModalBody","modal_StaffModal","modal_OrdersModal","modal_SalesModal","modal_ModalBody","SearchIcon","searchImg","setSearchValue","setSecondarySearchValue","second","onChangeHandler","bool","get","where","storeAs","general_SearchIcon","input","querySelectorAll","activeInput","nextElementSibling","searchClickHandler","unfilledOrders","unfilled_UnfilledOrderItem","unfilledFiltered","unfilled_SearchTable","unfilled_NoSearchTable","Orders","Staff","Sales","Inventory","Search","modal_Modal","navigation_DropdownNavigation","navigation_WidgetNavigation","titles_AdminTitle","orders_AddOrderGroup","unfilled_UnfilledTable","general_SearchInputGroup","filled_FilledTable","income","sales","sales_TableHeading","sales_SalesTableItem","Chart","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scales","yAxes","scaleLabel","labelString","xAxes","component","sales_SalesTable","SalesGraph","_ref$member","staff","table_StaffListMember","staff_AddMemberGroup","StaffTable","search_type","dateFilled","results","search_data","search_SearchItem","setSearchType","setListener","removeOnUnset","disabled","search_SearchOptions","search_SearchSettings","search_SearchResults","table_InventoryItem","_ref2$firestore$order","authorFiltered","titleFiltered","TableHeadings","table_TableHeadings","table_SearchTable","table_NoSearchTable","fictionBar","nonFictionBar","totalBooks","fictionBookArr","nonFictionBookArr","width","role","inventory_InventoryProgressBar","inventory_SummaryInfo","table_InventoryTable","App","basename","exact","path","Landing","Dashboard","Profile","EditProfile","Tasks","Events","Settings","EditSettings","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initState","authReducer","arguments","undefined","action","objectSpread","login_error","password_error","editReducer","eventReducer","initialState","searchReducer","modalReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","store","reactReduxFirebase","attachAuthIsReady","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","applyMiddleware","thunk","withExtraArgument","getFirestore","window","__REDUX_DEVTOOLS_EXTENSION__","firebaseAuthIsReady","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.ed3d9849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orinda-books-logo.8a02731f.png\";","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // whether or not there is an error is stored in the state\r\n    this.state = {\r\n      error: null\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // if there is an error passed in, then getDerivedStateFromError will update the state {error: error}\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    // extract error and child component\r\n    const { error } = this.state,\r\n      { children } = this.props;\r\n\r\n    // if error, return alternative component\r\n    if (error) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <h2>Oh-no! Something went wrong</h2>\r\n          <p>Give this page a refresh!</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // if no error, return child components\r\n    return children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LoginButton({ onClick }) {\r\n  return (\r\n    <button className=\"login-button\" type=\"Submit\" onClick={onClick}>\r\n      Login\r\n    </button>\r\n  );\r\n}\r\n\r\nLoginButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LoginButton;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logIn } from \"actions/authActions\";\r\n\r\nimport LoginButton from \"components/buttons/LoginButton\";\r\n\r\nfunction Login({ auth_error, logIn }) {\r\n  // the users details are kept in the state using react hooks\r\n  // initial state is set to empty strings\r\n  const [email, setEmail] = useState(\"\"),\r\n    [password, setPassword] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    // if the email value has changed, change email state\r\n    if (e.target.type === \"email\") setEmail(e.target.value);\r\n    // if password value has changed, change password state\r\n    else if (e.target.type === \"password\") setPassword(e.target.value);\r\n  }\r\n\r\n  function handleClick(e) {\r\n    // prevent browser default behaviours\r\n    e.preventDefault();\r\n    // dispatch a login action\r\n    logIn({ email, password });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"landing-input-group\">\r\n        <input\r\n          className=\"landing-input-username\"\r\n          type=\"email\"\r\n          placeholder=\"use: example@example.com\"\r\n          name=\"usn\"\r\n          required\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <input\r\n          className=\"landing-input-password\"\r\n          type=\"password\"\r\n          placeholder=\"use: password\"\r\n          name=\"psw\"\r\n          required\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <div className=\"auth-error-group\">\r\n          {auth_error ? <h4>Login Error: {auth_error.message}</h4> : null}\r\n        </div>\r\n        <LoginButton onClick={e => handleClick(e)} />\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  auth_error: PropTypes.object,\r\n  logIn: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ auth: { auth_error } }) => {\r\n  return {\r\n    auth_error\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logIn }\r\n)(Login);\r\n","import { LOGIN_ERROR, PASSWORD_RESET_ERROR } from \"actions/types\";\r\n\r\nexport const logIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      // .then(() => {\r\n      //   dispatch({ type: LOGIN_SUCCESS });\r\n      // })\r\n      .catch(err => {\r\n        // else if error\r\n        dispatch({ type: LOGIN_ERROR, payload: err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut();\r\n  };\r\n};\r\n\r\nexport const resetPassword = password => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    let user = firebase.auth().currentUser;\r\n\r\n    user.updatePassword(password).catch(err => {\r\n      dispatch({ type: PASSWORD_RESET_ERROR, payload: err });\r\n    });\r\n  };\r\n};\r\n","// auth actions\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const PASSWORD_RESET_ERROR = \"PASSWORD_RESET_ERROR\";\r\n\r\n//  edit actions\r\nexport const SET_EDIT_TYPE = \"SET_EDIT_TYPE\";\r\n\r\n// event actions\r\nexport const DETAIL_EVENT = \"DETAIL_EVENT\";\r\n\r\n// search actions\r\nexport const SEARCH_TYPE = \"SEARCH_TYPE\";\r\nexport const SEARCH_VALUE = \"SEARCH_VALUE\";\r\nexport const SECONDARY_SEARCH_VALUE = \"SECONDARY_SEARCH_VALUE\";\r\n\r\n// modal actions\r\nexport const SET_MODAL_TYPE = \"SET_MODAL_TYPE\";\r\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\r\nexport const VIEW_ITEM = \"VIEW_ITEM\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport Login from \"components/auth/Login\";\r\n\r\nfunction Landing({ auth: { uid } }) {\r\n  // if the user is authenticated then redirect them to the dashboard\r\n  if (uid) return <Redirect to=\"/dashboard\" />;\r\n\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <ErrorBoundary>\r\n        <h1>Orinda Books</h1>\r\n        <Login />\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.shape({\r\n    uid: PropTypes.string\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ firebase: { auth } }) => {\r\n  return {\r\n    auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import { SET_MODAL_TYPE, TOGGLE_MODAL, VIEW_ITEM } from \"actions/types\";\r\n\r\n// determines which modal will be show. For example: a 'view' modal or an 'edit' modal\r\nexport const setModalType = modalType => {\r\n  return {\r\n    type: SET_MODAL_TYPE,\r\n    payload: modalType\r\n  };\r\n};\r\n\r\n// dispatches the information about the item that the modal will contain information about.\r\nexport const setViewingItem = item => {\r\n  return {\r\n    type: VIEW_ITEM,\r\n    payload: item\r\n  };\r\n};\r\n\r\n// toggles the modal between on and off\r\nexport const toggleModal = modalType => {\r\n  return {\r\n    type: TOGGLE_MODAL,\r\n    payload: modalType\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logOut, resetPassword } from \"actions/authActions\";\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nfunction LogoutModalContent({ logOut, resetPassword, toggleModal, view_item }) {\r\n  function cancelHandler() {\r\n    // on cancel, hide the modal\r\n    toggleModal(\"\");\r\n  }\r\n\r\n  function clickHandler() {\r\n    // if there is a view item being used to store the password\r\n    // this means that the user is being logged out on attempting to reset their password\r\n    // else the user is logging out from the dashboard\r\n    if (view_item) resetPassword(view_item);\r\n    // dispatch a logout action\r\n    logOut();\r\n    // hide the modal\r\n    toggleModal(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"logout-modal-content\">\r\n      <h4>Warning</h4>\r\n      <p>\r\n        This action will log you out of the application. Are you sure you want\r\n        to continue?\r\n      </p>\r\n      <div className=\"logout-modal-button-group\">\r\n        <i className=\"fas fa-check fa-2x\" onClick={() => clickHandler()} />\r\n        <i className=\"fas fa-times fa-2x\" onClick={() => cancelHandler()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogoutModalContent.propTypes = {\r\n  logOut: PropTypes.func.isRequired,\r\n  resetPassword: PropTypes.func.isRequired,\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  view_item: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logOut, resetPassword, setViewingItem, toggleModal }\r\n)(LogoutModalContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction ModalXButton({ toggleModal }) {\r\n  // on click, hide the modal\r\n  return <i className=\"fas fa-times X-button\" onClick={() => toggleModal()} />;\r\n}\r\n\r\nModalXButton.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleModal }\r\n)(ModalXButton);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LogoutModalContent from \"components/auth/LogoutModalContent\";\r\nimport ModalXButton from \"components/modal/ModalXButton\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nfunction LogoutModal({ setViewingItem, toggleModal }) {\r\n  useEffect(() => {\r\n    // when component mounts add an event listern to the modal\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      // if you click outside the modal\r\n      if (e.target.contains(document.querySelector(\".logout-modal-overlay\"))) {\r\n        // hide the modal\r\n        toggleModal(\"\");\r\n\r\n        // remove the event listener\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n\r\n      return function cleanUp() {\r\n        // when the component dismounts, remove the event listener\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      };\r\n    });\r\n\r\n    return () => {\r\n      // if the page has been navigated away from and the component dismounts, remove the event listener\r\n      setViewingItem(\"\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"logout-modal-overlay\">\r\n      <div className=\"logout-modal-container\">\r\n        <ModalXButton />\r\n        <LogoutModalContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogoutModal.propTypes = {\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { setViewingItem, toggleModal }\r\n)(LogoutModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Logo from \"img/orinda-books-logo.png\";\r\n\r\nfunction HomeLogo({ className, onClick }) {\r\n  return (\r\n    <img\r\n      src={Logo}\r\n      className={`home-logo ${className}`}\r\n      alt=\"profile\"\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nHomeLogo.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default HomeLogo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DashboardNavigation() {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profile\">\r\n          <span>Profile</span> <i className=\"fas fa-user\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/tasks\">\r\n          <span>Tasks</span> <i className=\"fas fa-feather-alt\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/events\">\r\n          <span>Events</span> <i className=\"fas fa-calendar-alt\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/settings\">\r\n          <span>Settings</span> <i className=\"fas fa-cog\" />\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default DashboardNavigation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction Logout({ toggleModal }) {\r\n  return (\r\n    <div className=\"logout\" onClick={() => toggleModal()}>\r\n      <span>Logout</span> <i className=\"fas fa-power-off\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nLogout.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleModal }\r\n)(Logout);\r\n","import React from \"react\";\r\n\r\nimport HomeLogo from \"components/general/HomeLogo\";\r\nimport DashboardNavigation from \"components/navigation/DashboardNavigation\";\r\nimport Logout from \"components/auth/Logout\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"dashboard-sidebar-container font-secondary\">\r\n      <HomeLogo className=\"dashboard-home-logo\" />\r\n      <DashboardNavigation />\r\n      <Logout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction WidgetTitle({ value }) {\r\n  return <h2 className=\"text-theme-blue\">{value}</h2>;\r\n}\r\n\r\nWidgetTitle.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WidgetTitle;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport WidgetTitle from \"components/widgets/WidgetTitle\";\r\n\r\nimport OrdersImg from \"img/widgets/orders.png\";\r\n\r\nfunction OrdersWidget() {\r\n  return (\r\n    <Link\r\n      to=\"/orders\"\r\n      className=\"dashboard-widget-container dashboard-orders-widget-container\"\r\n    >\r\n      <img src={OrdersImg} className=\"small-widget-pic\" alt=\"orders\" />\r\n      <WidgetTitle value=\"Orders\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default OrdersWidget;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport WidgetTitle from \"components/widgets/WidgetTitle\";\r\n\r\nimport StaffImg from \"img/widgets/staff.png\";\r\n\r\nfunction StaffWidget() {\r\n  return (\r\n    <Link\r\n      to=\"/staff\"\r\n      className=\"dashboard-widget-container dashboard-staff-widget-container\"\r\n    >\r\n      <img\r\n        src={StaffImg}\r\n        className=\"small-widget-pic staff-widget-pic\"\r\n        alt=\"staff\"\r\n      />\r\n      <WidgetTitle value=\"Staff\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default StaffWidget;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport WidgetTitle from \"components/widgets/WidgetTitle\";\r\n\r\nimport SalesImg from \"img/widgets/sales.png\";\r\n\r\nfunction SalesWidget() {\r\n  return (\r\n    <Link\r\n      to=\"/sales\"\r\n      className=\"dashboard-widget-container dashboard-sales-widget-container\"\r\n    >\r\n      <img src={SalesImg} className=\"small-widget-pic\" alt=\"sales\" />\r\n      <WidgetTitle value=\"Sales\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SalesWidget;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport WidgetTitle from \"components/widgets/WidgetTitle\";\r\n\r\nimport InventoryImg from \"img/widgets/inventory.png\";\r\n\r\nfunction InventoryWidget() {\r\n  return (\r\n    <Link\r\n      to=\"/inventory\"\r\n      className=\"dashboard-widget-container dashboard-inventory-widget-container\"\r\n    >\r\n      <img src={InventoryImg} className=\"large-widget-pic\" alt=\"inventory\" />\r\n      <WidgetTitle value=\"Inventory\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default InventoryWidget;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport WidgetTitle from \"components/widgets/WidgetTitle\";\r\n\r\nimport SearchImg from \"img/widgets/search.png\";\r\n\r\nfunction SearchWidget() {\r\n  return (\r\n    <Link\r\n      to=\"/search\"\r\n      className=\"dashboard-widget-container dashboard-search-widget-container\"\r\n    >\r\n      <img src={SearchImg} className=\"large-widget-pic\" alt=\"search\" />\r\n      <WidgetTitle value=\"Search\" />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SearchWidget;\r\n","import React from \"react\";\r\n\r\nimport OrdersWidget from \"components/widgets/OrdersWidget\";\r\nimport StaffWidget from \"components/widgets/StaffWidget\";\r\nimport SalesWidget from \"components/widgets/SalesWidget\";\r\nimport InventoryWidget from \"components/widgets/InventoryWidget\";\r\nimport SearchWidget from \"components/widgets/SearchWidget\";\r\n\r\nexport default function Widgets() {\r\n  return (\r\n    <div className=\"dashboard-widgets-container\">\r\n      <OrdersWidget />\r\n      <StaffWidget />\r\n      <SalesWidget />\r\n      <InventoryWidget />\r\n      <SearchWidget />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport LogoutModal from \"components/auth/LogoutModal\";\r\nimport Sidebar from \"components/navigation/Sidebar\";\r\nimport Widgets from \"components/widgets/Widgets\";\r\n\r\nfunction Dashboard({ auth: { uid }, modal_open }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let content;\r\n  // if the redux store says the modal should be open then display the modal\r\n  if (modal_open) content = <LogoutModal />;\r\n\r\n  return (\r\n    <div className=\"full-page-container dashboard-container\">\r\n      {content}\r\n      <ErrorBoundary>\r\n        <Sidebar />\r\n        <Widgets />\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  auth: PropTypes.object,\r\n  modal_open: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ firebase: { auth }, modal: { modal_open } }) => {\r\n  return { auth, modal_open };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EditButton({ id, onClick }) {\r\n  return (\r\n    <button className=\"edit-button\" id={id} onClick={onClick}>\r\n      Edit\r\n    </button>\r\n  );\r\n}\r\n\r\nEditButton.propTypes = {\r\n  id: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EditButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction IconNavigation({ location: { pathname } }) {\r\n  // if the user is on a particular route\r\n  // then the icon for the route will not be shown\r\n  // for example, if user is on 'tasks' page, then the option to navigate to the tasks page\r\n  // through the tasks icon will not be displayed\r\n  return (\r\n    <ul className=\"text-theme-blue\">\r\n      {pathname === \"/profile\" || pathname === \"/profile/edit\" || (\r\n        <li>\r\n          <Link to=\"/profile\">\r\n            <i className=\"fas fa-user fa-2x\" />\r\n          </Link>\r\n        </li>\r\n      )}\r\n      {pathname === \"/tasks\" || (\r\n        <li>\r\n          <Link to=\"/tasks\">\r\n            <i className=\"fas fa-feather-alt fa-2x\" />\r\n          </Link>{\" \"}\r\n        </li>\r\n      )}\r\n      {pathname === \"/events\" || (\r\n        <li>\r\n          <Link to=\"/events\">\r\n            <i className=\"fas fa-calendar-alt fa-2x\" />\r\n          </Link>{\" \"}\r\n        </li>\r\n      )}\r\n      {pathname === \"/settings\" || pathname === \"/settings/edit\" || (\r\n        <li>\r\n          <Link to=\"/settings\">\r\n            <i className=\"fas fa-cog fa-2x\" />\r\n          </Link>{\" \"}\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nIconNavigation.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default withRouter(IconNavigation);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport IconNavigation from \"components/navigation/IconNavigation\";\r\n\r\nfunction IconSidebar() {\r\n  return (\r\n    <div className=\"icon-sidebar-container font-secondary\">\r\n      <IconNavigation />\r\n      <Link to=\"/dashboard\">\r\n        <i className=\"fas fa-home fa-2x\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ProfileTitle({ value }) {\r\n  return (\r\n    <h2 className=\"profile-page-title font-secondary\">\r\n      {value}{\" \"}\r\n      <span>\r\n        {value === \"Profile\" || value === \"Edit Profile\" ? (\r\n          <i className=\"fas fa-user\" />\r\n        ) : value === \"Tasks\" ? (\r\n          <i className=\"fas fa-feather-alt\" />\r\n        ) : value === \"Events\" ? (\r\n          <i className=\"fas fa-calendar-alt\" />\r\n        ) : (\r\n          <i className=\"fas fa-cog\" />\r\n        )}\r\n      </span>\r\n    </h2>\r\n  );\r\n}\r\n\r\nProfileTitle.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProfilePic({ className, photoUrl }) {\r\n  let content;\r\n\r\n  // firebase request to sunc to store doesnt send until after components have rendered\r\n  // meaning that the first time this component is rendered, there is not photoUrl but\r\n  // something must be rendered so an empty div is\r\n  photoUrl\r\n    ? (content = <img src={photoUrl} className={className} alt=\"profile\" />)\r\n    : (content = <div />);\r\n\r\n  return <React.Fragment>{content}</React.Fragment>;\r\n}\r\n\r\nProfilePic.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  photoUrl: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    profile: { photoUrl }\r\n  }\r\n}) => {\r\n  return {\r\n    photoUrl\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfilePic);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ProfilePic from \"components/general/ProfilePic\";\r\n\r\nfunction ProfileDetails({\r\n  profile: { firstName, lastName, email, phone, position }\r\n}) {\r\n  return (\r\n    <div className=\"profile-details-container\">\r\n      <div className=\"profile-info\">\r\n        <p>\r\n          <span>Name:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{firstName} {lastName}\r\n        </p>\r\n        <p>\r\n          <span>Position:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{position}\r\n        </p>\r\n        <p>\r\n          <span>Email:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {email}\r\n        </p>\r\n        <p>\r\n          <span>Phone:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {phone}\r\n        </p>\r\n      </div>\r\n      <ProfilePic className=\"profile-page-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nProfileDetails.propTypes = {\r\n  profile: PropTypes.shape({\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    position: PropTypes.string\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ firebase: { profile } }) => {\r\n  return {\r\n    profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfileDetails);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport EditButton from \"components/buttons/EditButton\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\nimport ProfileDetails from \"components/profile/profile/ProfileDetails\";\r\n\r\nfunction Profile({ history: { push }, uid }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      <IconSidebar />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Profile\" />\r\n          <div className=\"profile-related-content-container profile-page-content-container\">\r\n            <ProfileDetails />\r\n            <EditButton onClick={() => push(\"/profile/edit\")} />\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired\r\n  }),\r\n  uid: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  }\r\n}) => {\r\n  return {\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction InputSaveButton({ className }) {\r\n  return (\r\n    <input type=\"submit\" value=\"Save\" className={`${className} save-button`} />\r\n  );\r\n}\r\n\r\nInputSaveButton.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nInputSaveButton.defaultProps = {\r\n  className: \"\"\r\n};\r\n\r\nexport default InputSaveButton;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport InputSaveButton from \"components/buttons/InputSaveButton\";\r\n\r\nclass ProfileInputDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // these properties are reference to each of the inputs in the DOM form\r\n    this.firstNameInput = React.createRef();\r\n    this.lastNameInput = React.createRef();\r\n    this.emailInput = React.createRef();\r\n    this.positionInput = React.createRef();\r\n    this.phoneInput = React.createRef();\r\n    this.balanceInput = React.createRef();\r\n  }\r\n\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      firebase,\r\n      history: { push }\r\n    } = this.props;\r\n\r\n    // assemble the updated profile from the DOM references to the inputs\r\n    const updProfile = {\r\n      firstName: this.firstNameInput.current.value,\r\n      lastName: this.lastNameInput.current.value,\r\n      email: this.emailInput.current.value,\r\n      position: this.positionInput.current.value,\r\n      phone: this.phoneInput.current.value\r\n    };\r\n\r\n    // call update profile method on firebase object by passing in the assembled profile\r\n    firebase.updateProfile(updProfile);\r\n\r\n    // redirect the user to the original profile page\r\n    push(\"/profile\");\r\n  };\r\n\r\n  render() {\r\n    const { firstName, lastName, email, phone, position } = this.props.profile;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form\r\n          className=\"edit-profile-form\"\r\n          onSubmit={e => this.onSubmitHandler(e)}\r\n        >\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"firstName\">First Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              defaultValue={firstName}\r\n              ref={this.firstNameInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"lastName\">Last Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              defaultValue={lastName}\r\n              ref={this.lastNameInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"position\">Position: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"position\"\r\n              defaultValue={position}\r\n              ref={this.positionInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              defaultValue={email}\r\n              ref={this.emailInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"mobile\">Mobile: </label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"phone\"\r\n              defaultValue={phone}\r\n              ref={this.phoneInput}\r\n            />\r\n          </div>\r\n          <InputSaveButton type=\"submit\" />\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProfileInputDetails.propTypes = {\r\n  firebase: PropTypes.object,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired\r\n  }),\r\n  profile: PropTypes.shape({\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    position: PropTypes.string\r\n  })\r\n};\r\n\r\nexport default firebaseConnect()(withRouter(ProfileInputDetails));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\nimport ProfileInputDetails from \"components/profile/profile/ProfileInputDetails\";\r\n\r\nfunction EditProfile({ profile, uid }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      <IconSidebar pathname=\"/profile\" />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Edit Profile\" />\r\n          <div className=\"profile-related-content-container profile-page-content-container\">\r\n            <ProfileInputDetails profile={profile} />\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  profile: PropTypes.shape({\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    position: PropTypes.string\r\n  }),\r\n  uid: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid },\r\n    profile\r\n  }\r\n}) => {\r\n  return {\r\n    profile,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditProfile);\r\n","export const getDate = status => {\r\n  if (!status) {\r\n    let date = new Date();\r\n\r\n    let mm = date.getMonth() + 1,\r\n      dd = date.getDate(),\r\n      yyyy = date.getFullYear();\r\n\r\n    if (dd < 10) dd = `0${dd}`;\r\n    if (mm < 10) mm = `0${mm}`;\r\n\r\n    date = `${dd}/${mm}/${yyyy}`;\r\n\r\n    return date;\r\n  } else {\r\n    let date = new Date();\r\n\r\n    let mm = date.getMonth() + 1,\r\n      dd = date.getDate(),\r\n      yyyy = date.getFullYear() + 1;\r\n\r\n    if (dd < 10) dd = `0${dd}`;\r\n    if (mm < 10) mm = `0${mm}`;\r\n\r\n    date = `${dd}/${mm}/${yyyy}`;\r\n\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const calendarDateStandardizer = date => {\r\n  let dateChars = date.toString().split(\"\");\r\n  let dd = dateChars[8] + dateChars[9];\r\n  let monthChars = dateChars[4] + dateChars[5] + dateChars[6];\r\n  let mm;\r\n\r\n  switch (monthChars) {\r\n    case \"Jan\":\r\n      mm = \"01\";\r\n      break;\r\n    case \"Feb\":\r\n      mm = \"02\";\r\n      break;\r\n    case \"Mar\":\r\n      mm = \"03\";\r\n      break;\r\n    case \"Apr\":\r\n      mm = \"04\";\r\n      break;\r\n    case \"May\":\r\n      mm = \"05\";\r\n      break;\r\n    case \"Jun\":\r\n      mm = \"06\";\r\n      break;\r\n    case \"Jul\":\r\n      mm = \"07\";\r\n      break;\r\n    case \"Aug\":\r\n      mm = \"08\";\r\n      break;\r\n    case \"Sep\":\r\n      mm = \"09\";\r\n      break;\r\n    case \"Oct\":\r\n      mm = \"10\";\r\n      break;\r\n    case \"Nov\":\r\n      mm = \"11\";\r\n      break;\r\n    case \"Dec\":\r\n      mm = \"12\";\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  let yyyy = dateChars[11] + dateChars[12] + dateChars[13] + dateChars[14];\r\n\r\n  const formattedDate = `${dd}/${mm}/${yyyy}`;\r\n\r\n  return formattedDate;\r\n};\r\n\r\nexport const validateFormat = date => {\r\n  if (!date.match(/^\\w{1,2}\\/\\w{1,2}\\/\\w{4}$/)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction InputAddButton({ id }) {\r\n  return <input type=\"submit\" value=\"Add\" className=\"add-button\" id={id} />;\r\n}\r\n\r\nInputAddButton.propTypes = {\r\n  id: PropTypes.string\r\n};\r\n\r\nInputAddButton.defaultProps = {\r\n  id: \"\"\r\n};\r\n\r\nexport default InputAddButton;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport uuid from \"uuid\";\r\nimport { validateFormat } from \"helpers/dateFuncs\";\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport InputAddButton from \"components/buttons/InputAddButton\";\r\n\r\nfunction AddTaskModalContent({ firestore, tasks, toggleModal, uid }) {\r\n  // title, deadline and notes of the new event that is being added are kept in state\r\n  const [title, setTitle] = useState(),\r\n    [deadline, setDeadline] = useState(),\r\n    [notes, setNotes] = useState();\r\n\r\n  function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    // if date format is invalid display a warning\r\n    if (!validateFormat(deadline)) {\r\n      document.getElementById(\"deadlineInput\").classList = \"warning-input\";\r\n      document.querySelector(\".input-warning-message\").style.display = \"block\";\r\n      return;\r\n    } else {\r\n      // if date is valied, push the new task to the original tasks array\r\n      tasks.push({\r\n        title,\r\n        deadline,\r\n        notes: notes ? notes : null,\r\n        checked: false,\r\n        // uuid gives the 'id' property a unique string id\r\n        id: uuid()\r\n      });\r\n\r\n      const tasksUpd = {\r\n        tasks\r\n      };\r\n\r\n      // update the NoSql collection of Users, passing in the updated tasks object\r\n      firestore.update({ collection: \"users\", doc: uid }, tasksUpd);\r\n\r\n      // hide the modal\r\n      toggleModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3>New Task</h3>\r\n      <form onSubmit={e => onSubmitHandler(e)}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"title-input\"\r\n          placeholder=\"Title\"\r\n          required\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n        <input\r\n          id=\"deadlineInput\"\r\n          type=\"text\"\r\n          name=\"deadline\"\r\n          className=\"deadline-input\"\r\n          placeholder=\"Deadline: dd/mm/yyyy\"\r\n          required\r\n          onChange={e => setDeadline(e.target.value)}\r\n        />\r\n        <p className=\"input-warning-message\">\r\n          Please check again, your current date format is incorrect.\r\n        </p>\r\n        <textarea\r\n          maxLength=\"100\"\r\n          name=\"notes\"\r\n          className=\"notes-input\"\r\n          placeholder=\"Notes\"\r\n          onChange={e => setNotes(e.target.value)}\r\n        />\r\n        <InputAddButton id=\"inputAddButton\" />\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nAddTaskModalContent.propTypes = {\r\n  firestore: PropTypes.object,\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      deadline: PropTypes.string.isRequired,\r\n      notes: PropTypes.string\r\n    })\r\n  ),\r\n  toggleModal: PropTypes.func.isRequired,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid },\r\n    profile: { tasks }\r\n  }\r\n}) => {\r\n  return {\r\n    tasks,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  ),\r\n  firestoreConnect()\r\n)(AddTaskModalContent);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport uuid from \"uuid\";\r\nimport { validateFormat } from \"helpers/dateFuncs\";\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport InputSaveButton from \"components/buttons/InputSaveButton\";\r\n\r\nclass EditTaskModalContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // references to inputs within the dom allow default values of inputs to be set\r\n    // this lends a better user experience when the users is editing\r\n    this.titleInput = React.createRef();\r\n    this.deadlineInput = React.createRef();\r\n    this.notesInput = React.createRef();\r\n  }\r\n\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const { firestore, tasks, toggleModal, uid, view_item } = this.props;\r\n\r\n    // check if the deadline input is a valid date format\r\n    if (!validateFormat(this.deadlineInput.current.value)) {\r\n      // if it is not a valid date format, display warning message\r\n      document.getElementById(\"deadlineInput\").classList = \"warning-input\";\r\n      document.querySelector(\".input-warning-message\").style.display = \"block\";\r\n      return;\r\n    } else {\r\n      let tasksUpd = {\r\n        // iterate over each of the tasks, when you reach the original task that the user is editing\r\n        // swap that original task with the updated task\r\n        tasks: tasks.map(task => {\r\n          return task.id === view_item.id\r\n            ? {\r\n                title: this.titleInput.current.value,\r\n                deadline: this.deadlineInput.current.value,\r\n                notes: this.notesInput.current.value,\r\n                checked: false,\r\n                // uuid = unique string id\r\n                id: uuid()\r\n              }\r\n            : task;\r\n        })\r\n      };\r\n\r\n      // hide modal\r\n      toggleModal();\r\n\r\n      // update database\r\n      firestore.update({ collection: \"users\", doc: uid }, tasksUpd);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { title, deadline, notes } = this.props.view_item;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h3>New Task</h3>\r\n        <form onSubmit={e => this.onSubmitHandler(e)}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"title-input\"\r\n            defaultValue={title}\r\n            ref={this.titleInput}\r\n          />\r\n          <input\r\n            id=\"deadlineInput\"\r\n            type=\"text\"\r\n            name=\"deadline\"\r\n            className=\"deadline-input\"\r\n            defaultValue={deadline}\r\n            ref={this.deadlineInput}\r\n          />\r\n          <p className=\"input-warning-message\">\r\n            Please check again, your current date format is incorrect.\r\n          </p>\r\n          <textarea\r\n            maxLength=\"100\"\r\n            name=\"notes\"\r\n            className=\"notes-input\"\r\n            defaultValue={notes}\r\n            ref={this.notesInput}\r\n          />\r\n          <InputSaveButton />\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditTaskModalContent.propTypes = {\r\n  firestore: PropTypes.object,\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      deadline: PropTypes.string,\r\n      notes: PropTypes.string,\r\n      id: PropTypes.string\r\n    })\r\n  ),\r\n  toggleModal: PropTypes.func.isRequired,\r\n  uid: PropTypes.string.isRequired,\r\n  view_item: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    deadline: PropTypes.string.isRequired,\r\n    notes: PropTypes.string,\r\n    id: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid },\r\n    profile: { tasks }\r\n  },\r\n  modal: { view_item }\r\n}) => {\r\n  return {\r\n    tasks,\r\n    uid,\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  )\r\n)(EditTaskModalContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction CheckTaskIcon({\r\n  className,\r\n  firestore,\r\n  modal,\r\n  tasks,\r\n  title,\r\n  toggleModal,\r\n  uid\r\n}) {\r\n  function clickHandler() {\r\n    if (modal) toggleModal();\r\n\r\n    // update the task to show it has been checked (completed) or unchecked (not completed)\r\n    const tasksUpd = {\r\n      tasks: tasks.map(task => {\r\n        if (task.title === title) task.checked = !task.checked;\r\n\r\n        return task;\r\n      })\r\n    };\r\n\r\n    // update tasks collection with updated task aray\r\n    firestore.update({ collection: \"users\", doc: uid }, tasksUpd);\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={`fas fa-check ${className ? className : \"\"}`}\r\n      onClick={() => clickHandler()}\r\n    />\r\n  );\r\n}\r\n\r\nCheckTaskIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  firestore: PropTypes.object,\r\n  modal: PropTypes.bool,\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      deadline: PropTypes.string.isRequired,\r\n      notes: PropTypes.string\r\n    })\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  firebase: {\r\n    profile: { tasks }\r\n  }\r\n}) => {\r\n  return {\r\n    tasks,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  )\r\n)(CheckTaskIcon);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction DeleteTaskIcon({ firestore, modal, tasks, title, toggleModal, uid }) {\r\n  function clickHandler() {\r\n    if (modal) toggleModal();\r\n\r\n    // filter out the task to be deleted\r\n    const tasksUpd = {\r\n      tasks: tasks.filter(item => item.title !== title)\r\n    };\r\n\r\n    // update users collection with an updated array\r\n    firestore.update({ collection: \"users\", doc: uid }, tasksUpd);\r\n  }\r\n\r\n  return <i className=\"fas fa-trash\" onClick={() => clickHandler()} />;\r\n}\r\n\r\nDeleteTaskIcon.propTypes = {\r\n  firestore: PropTypes.object,\r\n  modal: PropTypes.bool,\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      deadline: PropTypes.string.isRequired,\r\n      notes: PropTypes.string\r\n    })\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  firebase: {\r\n    profile: { tasks }\r\n  }\r\n}) => {\r\n  return {\r\n    tasks,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  )\r\n)(DeleteTaskIcon);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  toggleModal,\r\n  setModalType,\r\n  setViewingItem\r\n} from \"actions/modalActions\";\r\n\r\nfunction EditTaskIcon({\r\n  modal,\r\n  task,\r\n  toggleModal,\r\n  setModalType,\r\n  setViewingItem\r\n}) {\r\n  function clickHandler() {\r\n    setViewingItem(task);\r\n\r\n    // don't toggle the modal whilst passing in the type because clicking edit shouldnt cause the modal to close\r\n    modal ? setModalType(\"edit\") : toggleModal(\"edit\");\r\n  }\r\n\r\n  return <i className=\"fas fa-pen\" onClick={() => clickHandler()} />;\r\n}\r\n\r\nEditTaskIcon.propTypes = {\r\n  modal: PropTypes.bool,\r\n  task: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    deadline: PropTypes.string.isRequired,\r\n    notes: PropTypes.string\r\n  }),\r\n  setModalType: PropTypes.func.isRequired,\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleModal, setModalType, setViewingItem }\r\n)(EditTaskIcon);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CheckTaskIcon from \"components/profile/tasks/CheckTaskIcon\";\r\nimport DeleteTaskIcon from \"components/profile/tasks/DeleteTaskIcon\";\r\nimport EditTaskIcon from \"components/profile/tasks/EditTaskIcon\";\r\n\r\nfunction ViewTaskModalContent({\r\n  view_item,\r\n  view_item: { checked, deadline, notes, title }\r\n}) {\r\n  return (\r\n    <div className=\"view-task-modal-content\">\r\n      <h3>{title}</h3>\r\n      <h5>Deadline: {deadline}</h5>\r\n      <h4>Notes</h4>\r\n      {notes ? (\r\n        <p>{notes}</p>\r\n      ) : (\r\n        <p className=\"empty-notes-title\">This task currently has no notes</p>\r\n      )}\r\n      <div className=\"view-task-icon-group\">\r\n        {checked || <CheckTaskIcon title={title} modal />}\r\n        <EditTaskIcon task={view_item} modal />\r\n        <DeleteTaskIcon title={title} modal />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewTaskModalContent.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    deadline: PropTypes.string.isRequired,\r\n    notes: PropTypes.string,\r\n    title: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewTaskModalContent);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport AddTaskModalContent from \"components/profile/tasks/modal/AddTaskModalContent\";\r\nimport EditTaskModalContent from \"components/profile/tasks/modal/EditTaskModalContent\";\r\nimport ViewTaskModalContent from \"components/profile/tasks/modal/ViewTaskModalContent\";\r\nimport ModalXButton from \"components/modal/ModalXButton\";\r\n\r\nfunction TaskModal({ modal_type, toggleModal }) {\r\n  useEffect(() => {\r\n    // click outside the modal closes the modal\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      if (e.target.contains(document.querySelector(\".modal-overlay\"))) {\r\n        toggleModal(\"\");\r\n\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n\r\n      return function cleanUp() {\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      };\r\n    });\r\n  });\r\n\r\n  let modalContent;\r\n\r\n  // check the type of modal the user is trying to access\r\n  if (modal_type === \"add\") modalContent = <AddTaskModalContent />;\r\n  else if (modal_type === \"view\") modalContent = <ViewTaskModalContent />;\r\n  else if (modal_type === \"edit\") modalContent = <EditTaskModalContent />;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"profile-modal-content task-modal-content\">\r\n        <ModalXButton />\r\n        {modalContent}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskModal.propTypes = {\r\n  modal_type: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { modal_type } }) => {\r\n  return {\r\n    modal_type\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  )\r\n)(TaskModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nimport CheckTaskIcon from \"components/profile/tasks/CheckTaskIcon\";\r\nimport DeleteTaskIcon from \"components/profile/tasks/DeleteTaskIcon\";\r\nimport EditTaskIcon from \"components/profile/tasks/EditTaskIcon\";\r\n\r\nfunction TaskCard({\r\n  setViewingItem,\r\n  task,\r\n  task: { checked, deadline, title },\r\n  toggleModal\r\n}) {\r\n  function clickHandler(e) {\r\n    // only open the view modal if white space has been clicked on the card\r\n    if (\r\n      e.target.classList === \".task-card\" ||\r\n      e.target.classList === \".pin-group\" ||\r\n      e.target.nodeName === \"H4\"\r\n    ) {\r\n      setViewingItem(task);\r\n      toggleModal(\"view\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-card\" onClick={e => clickHandler(e)}>\r\n      <div className=\"pin-group\">\r\n        <i className=\"fas fa-map-pin fa-2x\" />\r\n        <i className=\"fas fa-map-pin fa-2x\" />\r\n      </div>\r\n      <h4>\r\n        {title} <br />\r\n        <br /> Deadline: {deadline}\r\n      </h4>\r\n      {checked && <CheckTaskIcon className=\"fa-2x\" title={title} />}\r\n      <div className=\"task-card-icon-group\">\r\n        {checked || <CheckTaskIcon title={title} />}\r\n        <EditTaskIcon task={task} />\r\n        <DeleteTaskIcon title={title} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskCard.propTypes = {\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  task: PropTypes.shape({\r\n    checked: PropTypes.bool.isRequired,\r\n    deadline: PropTypes.string,\r\n    notes: PropTypes.string,\r\n    title: PropTypes.string.isRequired\r\n  }),\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(TaskCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction EmptyTasksContent({ toggleModal }) {\r\n  return (\r\n    <div className=\"empty-tasks-group\">\r\n      <h2 className=\"tasks-empty-tasks-title font-secondary\">\r\n        You have no current tasks!\r\n      </h2>\r\n      <i className=\"fas fa-plus fa-2x\" onClick={() => toggleModal()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nEmptyTasksContent.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleModal }\r\n)(EmptyTasksContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction PlusIcon({ onClick }) {\r\n  return <i className=\"fas fa-plus fa-2x\" onClick={onClick} />;\r\n}\r\n\r\nPlusIcon.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default PlusIcon;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport PlusIcon from \"components/general/PlusIcon\";\r\n\r\nfunction AddNewTask({ toggleModal }) {\r\n  return (\r\n    <div className=\"task-card add-task-card\" onClick={() => toggleModal(\"add\")}>\r\n      <div className=\"add-task-card-content\">\r\n        <h3 className=\"font-secondary\">Click here to add a new task!</h3>\r\n        <PlusIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddNewTask.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    toggleModal\r\n  }\r\n)(AddNewTask);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TaskCard from \"components/profile/tasks/TaskCard\";\r\nimport EmptyTasksContent from \"components/profile/tasks/EmptyTasksContent\";\r\nimport AddNewTask from \"components/profile/tasks/AddNewTask\";\r\n\r\nfunction TasksContent({ tasks }) {\r\n  let content;\r\n\r\n  if (tasks) {\r\n    content = (\r\n      <React.Fragment>\r\n        <AddNewTask />\r\n        {tasks.map(task => {\r\n          return <TaskCard key={task.title} task={task} />;\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    content = <EmptyTasksContent />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-related-content-container tasks-page-content-container\">\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nTasksContent.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      deadline: PropTypes.string,\r\n      notes: PropTypes.string\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    profile: { tasks }\r\n  }\r\n}) => {\r\n  return {\r\n    tasks\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TasksContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\nimport TaskModal from \"components/profile/tasks/modal/TaskModal\";\r\nimport TasksContent from \"components/profile/tasks/TasksContent\";\r\n\r\nfunction Tasks({ modal_open, uid }) {\r\n  // if the user is not authenticated redirect them to login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let modal;\r\n  // if redux store says the modal should be open, display the modal\r\n  if (modal_open) modal = <TaskModal uid={uid} />;\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      {modal}\r\n      <IconSidebar />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Tasks\" />\r\n          <TasksContent />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTasks.propTypes = {\r\n  uid: PropTypes.string,\r\n  modal_open: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    modal_open,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Tasks);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport { setDetailEvent } from \"actions/eventActions\";\r\nimport { calendarDateStandardizer } from \"helpers/dateFuncs\";\r\n\r\nfunction EventsCalendar({ events, setDetailEvent }) {\r\n  function clickHandler(value) {\r\n    setDetailEvent(\r\n      events.filter(event => event.dateOf === calendarDateStandardizer(value))\r\n    );\r\n  }\r\n\r\n  // this function gets passed into the calendar and is called for each tile\r\n  function tileHandler({ date }) {\r\n    if (events) {\r\n      // date is passed through a maintainer which ensures the correct date format\r\n      // datesArr is an array of the dates of all the events\r\n      const tileDate = calendarDateStandardizer(date),\r\n        datesArr = events.reduce((acc, curr) => {\r\n          acc.push(curr.dateOf);\r\n          return acc;\r\n        }, []);\r\n\r\n      let element;\r\n\r\n      // iterate over each date of the array return a red marked circle if there is an event on this date\r\n      // this red circle shows the users what dates he has events on just by looking at the calendar\r\n      datesArr.forEach(item => {\r\n        if (item === tileDate) {\r\n          element = <p className=\"event-circle\">&nbsp;</p>;\r\n        }\r\n      });\r\n\r\n      return element;\r\n    } else {\r\n      // if events havent passed through props then return\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Calendar\r\n      className=\"events-calendar\"\r\n      minDetail=\"month\"\r\n      onClickDay={value => clickHandler(value)}\r\n      showNeighboringMonth={false}\r\n      tileContent={tileHandler}\r\n    />\r\n  );\r\n}\r\n\r\nEventsCalendar.propTypes = {\r\n  events: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dateOf: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  setDetailEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setDetailEvent\r\n  }\r\n)(EventsCalendar);\r\n","import { DETAIL_EVENT } from \"actions/types\";\r\n\r\nexport const setDetailEvent = event => {\r\n  return {\r\n    type: DETAIL_EVENT,\r\n    payload: event\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal, setViewingItem } from \"actions/modalActions\";\r\n\r\nimport PlusIcon from \"components/general/PlusIcon\";\r\n\r\nfunction DetailEventInfo({ detail_event, setViewingItem, toggleModal }) {\r\n  let content;\r\n\r\n  function clickHandler(e, event) {\r\n    // prevent default browser behaviour\r\n    e.preventDefault();\r\n\r\n    // sync the data of the clicked event to the redux store\r\n    setViewingItem(event);\r\n    // set the redux type as general view\r\n    toggleModal(\"view\");\r\n  }\r\n\r\n  !detail_event\r\n    ? (content = (\r\n        <div className=\"empty-detail-event-group\">\r\n          <h3 className=\"empty-detail-event-title font-secondary\">\r\n            Click on a calendar event to view details or add an event!\r\n          </h3>\r\n          <PlusIcon onClick={() => toggleModal(\"add\")} />\r\n        </div>\r\n      ))\r\n    : detail_event.length\r\n    ? (content = (\r\n        <div className=\"detail-event-container\">\r\n          {detail_event.map(item => {\r\n            const { dateOf, title, time } = item;\r\n\r\n            return (\r\n              <div\r\n                className=\"detail-event-group\"\r\n                onClick={e => clickHandler(e, item)}\r\n                key={item.id}\r\n              >\r\n                <p className=\"event-date-label\">{dateOf}</p>\r\n                <p>{title}</p>\r\n                <p>\r\n                  <span>Starts at:</span> {time}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n          <PlusIcon onClick={() => toggleModal(\"add\")} />\r\n        </div>\r\n      ))\r\n    : (content = (\r\n        <div className=\"empty-detail-event-group\">\r\n          <h3 className=\"empty-detail-event-title font-secondary\">\r\n            No events currently planned on this date!\r\n          </h3>\r\n          <PlusIcon onClick={() => toggleModal(\"add\")} />\r\n        </div>\r\n      ));\r\n\r\n  return (\r\n    <div className=\"event-specific-container\">\r\n      <h2 className=\"font-secondary\">Event</h2>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nDetailEventInfo.propTypes = {\r\n  detail_event: PropTypes.arrayOf(PropTypes.object),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ events: { detail_event } }) => {\r\n  return {\r\n    detail_event\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(DetailEventInfo);\r\n","import React from \"react\";\r\n\r\nfunction Spinner() {\r\n  return <span className=\"lds-dual-ring \" />;\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getDate } from \"helpers/dateFuncs\";\r\n\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\nfunction UpcomingEventsInfo({ events }) {\r\n  let sortedEvents, content;\r\n\r\n  // get todays date in reverse\r\n  if (events) {\r\n    const today = getDate(),\r\n      todayReversed = today\r\n        .split(\"/\")\r\n        .reverse()\r\n        .join(\"\");\r\n\r\n    // filter out the dates which are in the past\r\n    const noPastDates = events.filter(event => {\r\n      let eventReversed = event.dateOf\r\n        .split(\"/\")\r\n        .reverse()\r\n        .join(\"\");\r\n      return eventReversed >= todayReversed;\r\n    });\r\n\r\n    // if there are no dates then show an empty dates title\r\n    if (!noPastDates.length) {\r\n      content = (\r\n        <h3 className=\"empty-detail-event-title font-secondary\">\r\n          You currently have no upcoming events!\r\n        </h3>\r\n      );\r\n    } else {\r\n      // sort dates in order\r\n      sortedEvents = noPastDates.sort((a, b) => {\r\n        var aa = a.dateOf\r\n          .split(\"/\")\r\n          .reverse()\r\n          .join();\r\n\r\n        var bb = b.dateOf\r\n          .split(\"/\")\r\n          .reverse()\r\n          .join();\r\n        return aa < bb ? -1 : aa > bb ? 1 : 0;\r\n      });\r\n\r\n      // map over the sorted dates and return a few paragraphs for each\r\n      content = (\r\n        <div className=\"upcoming-events-content\">\r\n          <p>Next 3 events:</p>\r\n          {sortedEvents.map(event => {\r\n            const { id, dateOf, title } = event;\r\n\r\n            return (\r\n              <p key={id}>\r\n                <span>{dateOf}</span>: {title}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  } else\r\n    content = (\r\n      <div className=\"spinner-container\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"events-upcoming-container\">\r\n      <h2 className=\"font-secondary\">Upcoming</h2>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nUpcomingEventsInfo.propTypes = {\r\n  events: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dateOf: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default UpcomingEventsInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport EventsCalendar from \"components/profile/events/EventsCalendar\";\r\nimport DetailEventInfo from \"components/profile/events/DetailEventInfo\";\r\nimport UpcomingEventsInfo from \"components/profile/events/UpcomingEventsInfo\";\r\n\r\nfunction EventsContent({ events }) {\r\n  return (\r\n    <div className=\"profile-related-content-container events-content-container\">\r\n      <EventsCalendar events={events} />\r\n      <div className=\"event-info-container\">\r\n        <UpcomingEventsInfo events={events} />\r\n        <DetailEventInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEventsContent.propTypes = {\r\n  events: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dateOf: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { events }\r\n  }\r\n}) => {\r\n  if (events) {\r\n    return {\r\n      events\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"events\" }])\r\n)(EventsContent);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport InputAddButton from \"components/buttons/InputAddButton\";\r\n\r\nimport { validateFormat } from \"helpers/dateFuncs\";\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction AddEventContent({ firestore, toggleModal }) {\r\n  // the values for the inputs are stored in the state\r\n  const [title, setTitle] = useState(),\r\n    [time, setTime] = useState(),\r\n    [notes, setNotes] = useState(),\r\n    [dateOf, setDateOf] = useState();\r\n\r\n  function submitHandler(e) {\r\n    // prevent default browser behavior\r\n    e.preventDefault();\r\n\r\n    // check if dateOf has been entered in the correct format\r\n    if (!validateFormat(dateOf)) {\r\n      // if format is incorrect, display warning message\r\n      document.getElementById(\"dateOfInput\").classList = \"warning-input\";\r\n      document.querySelector(\".input-warning-message\").style.display = \"block\";\r\n\r\n      return;\r\n    } else {\r\n      // if dateOf format is correct, assmeble newEvent object from the state\r\n      const newEvent = {\r\n        title,\r\n        time,\r\n        dateOf,\r\n        notes: notes ? notes : \"\"\r\n      };\r\n\r\n      // add to the firebase NoSql events collection, passing in assembled event\r\n      firestore.add({ collection: \"events\" }, newEvent);\r\n\r\n      // hide the modal\r\n      toggleModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3>New Event</h3>\r\n      <form onSubmit={e => submitHandler(e)} className=\"event-add-modal-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          onChange={e => setTitle(e.target.value)}\r\n          placeholder=\"Title\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"dateOf\"\r\n          id=\"dateOfInput\"\r\n          onChange={e => setDateOf(e.target.value)}\r\n          placeholder=\"dd / mm / yyyy\"\r\n          required\r\n        />\r\n        <p className=\"input-warning-message\">\r\n          Please check again, your current date format is incorrect.\r\n        </p>\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          id=\"dateOfInput\"\r\n          onChange={e => setTime(e.target.value)}\r\n          placeholder=\"time\"\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"notes\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          placeholder=\"Notes\"\r\n          onChange={e => setNotes(e.target.value)}\r\n        />\r\n        <InputAddButton />\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nAddEventContent.propTypes = {\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    null,\r\n    { toggleModal }\r\n  ),\r\n  firestoreConnect()\r\n)(AddEventContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ViewEventContent({ view_item: { dateOf, notes, time, title } }) {\r\n  return (\r\n    <div className=\"view-event-modal-content\">\r\n      <h3>{title}</h3>\r\n      <p>\r\n        <span>Date: </span>\r\n        {dateOf}\r\n      </p>\r\n      <p>\r\n        <span>Starts At: </span>\r\n        {time}\r\n      </p>\r\n      <h4>Notes</h4>\r\n      <p>{notes}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewEventContent.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    dateOf: PropTypes.string.isRequired,\r\n    notes: PropTypes.string,\r\n    time: PropTypes.string,\r\n    title: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewEventContent);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal, setViewingItem } from \"actions/modalActions\";\r\n\r\nimport AddEventContent from \"components/profile/events/modal/AddEventContent\";\r\nimport ModalXButton from \"components/modal/ModalXButton\";\r\nimport ViewEventContent from \"components/profile/events/modal/ViewEventContent\";\r\n\r\nfunction EventsModal({ modal_type, setViewingItem, toggleModal }) {\r\n  useEffect(() => {\r\n    // on mountaing listen to any clicks acting outside of the modal content\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      if (e.target.contains(document.querySelector(\".modal-overlay\"))) {\r\n        toggleModal();\r\n\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n\r\n      return function cleanUp() {\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      };\r\n    });\r\n\r\n    return () => {\r\n      // on dismount of the modal, reset the viewing data\r\n      setViewingItem(\"\");\r\n    };\r\n  });\r\n\r\n  let modalContent;\r\n\r\n  // subscribe to redux store to check what type of modal should be displayed\r\n  if (modal_type === \"add\") {\r\n    modalContent = <AddEventContent />;\r\n  } else if (modal_type === \"view\") {\r\n    modalContent = <ViewEventContent />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"profile-modal-content event-add-modal-content\">\r\n        <ModalXButton />\r\n        {modalContent}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEventsModal.propTypes = {\r\n  modal_type: PropTypes.string,\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { modal_type } }) => {\r\n  return {\r\n    modal_type\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(EventsModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport EventsContent from \"components/profile/events/EventsContent\";\r\nimport EventsModal from \"components/profile/events/modal/EventsModal\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\n\r\nfunction Events({ modal_open, uid }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let modal;\r\n  // if the redux store says the modal should be open, display the modal\r\n  if (modal_open) modal = <EventsModal />;\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      {modal}\r\n      <IconSidebar />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Events\" />\r\n          <EventsContent />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEvents.propTypes = {\r\n  modal_open: PropTypes.bool.isRequired,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    modal_open,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Events);\r\n","import { SET_EDIT_TYPE } from \"actions/types\";\r\n\r\nexport const setEditType = type => {\r\n  return {\r\n    type: SET_EDIT_TYPE,\r\n    payload: type\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\n\r\nimport { setEditType } from \"actions/editActions\";\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nimport EditButton from \"components/buttons/EditButton\";\r\nimport InputSaveButton from \"components/buttons/InputSaveButton\";\r\n\r\nfunction UserSettings({\r\n  edit_type,\r\n  firebase: {\r\n    auth: { email }\r\n  },\r\n  history: { push },\r\n  setEditType,\r\n  setViewingItem,\r\n  toggleModal\r\n}) {\r\n  // password will be stored in state using hook\r\n  const [password, changePassword] = useState();\r\n\r\n  function editHandler() {\r\n    setEditType(true);\r\n\r\n    // redirect to the EditSettings page\r\n    push(\"/settings/edit\");\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (!password || password.length < 7) {\r\n      // display warning text with warning theme\r\n      document.getElementById(\"passwordInput\").classList = \"warning-input\";\r\n      document.querySelector(\".input-warning-message\").style.display = \"block\";\r\n\r\n      // after 3 seconds, hide the warning message\r\n      setTimeout(() => {\r\n        document.getElementById(\"passwordInput\").classList = \"\";\r\n        document.querySelector(\".input-warning-message\").style.display = \"none\";\r\n      }, 3000);\r\n\r\n      return;\r\n    }\r\n\r\n    // store the password in redux state under 'viewing item'\r\n    setViewingItem(password);\r\n\r\n    toggleModal();\r\n  }\r\n\r\n  // if your in an edit state, show edit-able inputs\r\n  if (edit_type) {\r\n    return (\r\n      <React.Fragment>\r\n        <form\r\n          onSubmit={e => submitHandler(e)}\r\n          className=\"settings-user-form text-theme-blue\"\r\n        >\r\n          <p>\r\n            <span>Email:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n            {email}\r\n          </p>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"language\">Password:</label>\r\n            <input\r\n              id=\"passwordInput\"\r\n              type=\"text\"\r\n              onChange={e => changePassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <p className=\"input-warning-message\">\r\n            Please check again, you must enter a password 7 characters or\r\n            longer.\r\n          </p>\r\n          <InputSaveButton />\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    // if user is not editing, show paragraphs\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"settings-email-password\">\r\n          <p>\r\n            <span>Email:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{email}\r\n          </p>\r\n          <p>\r\n            <span>Password:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*******\r\n          </p>\r\n        </div>\r\n        {!edit_type && (\r\n          <EditButton id=\"userSettings\" onClick={() => editHandler()} />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nUserSettings.propTypes = {\r\n  edit_type: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  email: PropTypes.string,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired\r\n  }),\r\n  setEditType: PropTypes.func.isRequired,\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ edit: { edit_type }, firebase }) => {\r\n  return {\r\n    edit_type,\r\n    firebase\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { setEditType, setViewingItem, toggleModal }\r\n  )\r\n)(withRouter(UserSettings));\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { setEditType } from \"actions/editActions\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\nimport UserSettings from \"components/profile/settings/UserSettings\";\r\n\r\nfunction Settings({ setEditType, uid }) {\r\n  useEffect(() => {\r\n    // upon component mount, if user is not authenticated, redirect them to the login page\r\n    if (!uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // on mount, make sure edit state is set to false\r\n    setEditType(false);\r\n  });\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      <IconSidebar />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Settings\" />\r\n          <div className=\"settings-container\">\r\n            <div className=\"settings-content\">\r\n              <UserSettings />\r\n            </div>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSettings.propTypes = {\r\n  setEditType: PropTypes.func.isRequired,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  }\r\n}) => {\r\n  return {\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setEditType\r\n  }\r\n)(Settings);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport IconSidebar from \"components/navigation/IconSidebar\";\r\nimport LogoutModal from \"components/auth/LogoutModal\";\r\nimport ProfileTitle from \"components/titles/ProfileTitle\";\r\nimport UserSettings from \"components/profile/settings/UserSettings\";\r\n\r\nfunction EditSettings({ modal_open, uid }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let content;\r\n  // if the redux store says that the modal should be open, display the modal\r\n  if (modal_open) content = <LogoutModal />;\r\n\r\n  return (\r\n    <div className=\"full-page-container\">\r\n      {content}\r\n      <IconSidebar />\r\n      <div className=\"main-section-container\">\r\n        <ErrorBoundary>\r\n          <ProfileTitle value=\"Edit Settings\" />\r\n          <div className=\"settings-content-container settings-container\">\r\n            <div className=\"settings-content\">\r\n              <UserSettings uid={uid} />\r\n            </div>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEditSettings.propTypes = {\r\n  edit_type: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  modal_open: PropTypes.bool,\r\n  uid: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    modal_open,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditSettings);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AdminTitle({ value }) {\r\n  return <h2 className=\"admin-page-title\">{value}</h2>;\r\n}\r\n\r\nAdminTitle.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AdminTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport PlusIcon from \"components/general/PlusIcon\";\r\n\r\nfunction AddOrderGroup({ toggleModal }) {\r\n  function clickHandler() {\r\n    // display modal and set modal type\r\n    toggleModal(\"add\");\r\n  }\r\n  return (\r\n    <div className=\"add-order-group\" onClick={() => clickHandler()}>\r\n      <h2>Add Order</h2>\r\n      <PlusIcon />\r\n    </div>\r\n  );\r\n}\r\n\r\nAddOrderGroup.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    toggleModal\r\n  }\r\n)(AddOrderGroup);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport HomeLogo from \"components/general/HomeLogo\";\r\n\r\nfunction DropdownNavigation({ history: { push } }) {\r\n  // set initial dropdown state to false. ie: the dropdown menu is hidden\r\n  const [dropdownState, dropdownStateFunc] = useState(false);\r\n\r\n  function clickHandler() {\r\n    // navigate to the dashboard page\r\n    push(\"/dashboard\");\r\n  }\r\n\r\n  function dropdownHandler() {\r\n    const menu = document.querySelector(\"#dropdown-menu\");\r\n\r\n    // if the dropdown menu is hidden\r\n    if (!dropdownState) {\r\n      // then display the dropdown menu\r\n      menu.style.display = \"inherit\";\r\n      dropdownStateFunc(true);\r\n\r\n      document.addEventListener(\"click\", function clickFunc(e) {\r\n        // prevent default browser behaviour\r\n        e.preventDefault();\r\n\r\n        if (e.target.tagName.toLowerCase() !== \"a\") {\r\n          menu.style.display = \"none\";\r\n          dropdownStateFunc(false);\r\n        }\r\n\r\n        document.removeEventListener(\"click\", clickFunc);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown-navigation\">\r\n      <div className=\"dropdown-triggers\">\r\n        <div className=\"home-logo-group\">\r\n          <HomeLogo onClick={clickHandler} />\r\n          <h4>Orinda Books</h4>\r\n        </div>\r\n        <i className=\"fas fa-sort-down\" onClick={dropdownHandler} />\r\n      </div>\r\n      <ul id=\"dropdown-menu\">\r\n        <li>\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/tasks\">Tasks</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/events\">Events</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/settings\">Settings</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nDropdownNavigation.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired\r\n  })\r\n};\r\n\r\nexport default withRouter(DropdownNavigation);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ViewDetailsButton({ onClick }) {\r\n  return (\r\n    <button className=\"view-details-button\" onClick={onClick}>\r\n      View\r\n    </button>\r\n  );\r\n}\r\n\r\nViewDetailsButton.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default ViewDetailsButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nimport ViewDetailsButton from \"components/buttons/ViewDetailsButton\";\r\n\r\nfunction FilledOrderItem({\r\n  item,\r\n  item: { date, book, quantity },\r\n  setViewingItem,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    // set modal item data\r\n    setViewingItem(item);\r\n    // the modal should be to view a filled order, hence 'filled-view'\r\n    toggleModal(\"filled-view\");\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{date}</td>\r\n      <td>{book.title}</td>\r\n      <td>{quantity}</td>\r\n      <td>\r\n        <ViewDetailsButton\r\n          onClick={() => clickHandler(item)}\r\n          className=\"inventory-view-details-button\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nFilledOrderItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    company: PropTypes.string.isRequired,\r\n    filledDate: PropTypes.string.isRequired,\r\n    book: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired,\r\n      publicationDate: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      genre: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(FilledOrderItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport FilledOrderItem from \"components/admin/orders/table/filled/FilledOrderItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\nfunction NoSearchTable({ filledOrders }) {\r\n  return (\r\n    // isLoaded determines if the fetch firebase request is being processed\r\n    // is empty determines if the fetch firebase request has returned empty\r\n    // if the request is loading, display the spinner\r\n    // if the request is empty, display a title saying so\r\n    // else iterate over the data and display it\r\n    <tbody>\r\n      {!isLoaded(filledOrders) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td className=\"spinner-cell\">\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(filledOrders) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>You have no Filled Orders</h4>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        filledOrders.map(item => {\r\n          return <FilledOrderItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nNoSearchTable.propTypes = {\r\n  filledOrders: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { filledOrders }\r\n  }\r\n}) => {\r\n  if (filledOrders) {\r\n    return {\r\n      filledOrders\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"filledOrders\" }])\r\n)(NoSearchTable);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport FilledItem from \"components/admin/orders/table/filled/FilledOrderItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction SearchTable({ filledFiltered, searchVal }) {\r\n  // isLoaded determines if the fetch firebase request is being processed\r\n  // is empty determines if the fetch firebase request has returned empty\r\n  // if the request is loading, display the spinner\r\n  // if the request is empty, display a title saying so\r\n  // else iterate over the data and display it\r\n  return (\r\n    <tbody>\r\n      {!isLoaded(filledFiltered) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td className=\"spinner-cell\">\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(filledFiltered) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>{searchVal} returned no results!</h4>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        filledFiltered.map(item => {\r\n          return <FilledItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { filledFiltered }\r\n  }\r\n}) => {\r\n  if (filledFiltered) {\r\n    return {\r\n      filledFiltered\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect()\r\n)(SearchTable);\r\n","import React from \"react\";\r\n\r\nfunction TableHeading() {\r\n  return (\r\n    <thead>\r\n      <tr className=\"orders-table-headings\">\r\n        <td>Date</td>\r\n        <td>Books</td>\r\n        <td>Quantity</td>\r\n        <td />\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NoSearchTable from \"components/admin/orders/table/filled/NoSearchTable\";\r\nimport SearchTable from \"components/admin/orders/table/filled/SearchTable\";\r\nimport TableHeading from \"components/admin/orders/table/TableHeading\";\r\n\r\nfunction FilledTable({ secondary_search_value }) {\r\n  // because there is a filed and unfilled table, there are two search components\r\n  // one for each table\r\n  // secondary_search_value allows the redux store to distinguish between the two values\r\n  // in turn allowing each table to filter itself by subscribing to the correct state slice\r\n  if (secondary_search_value) {\r\n    // secondary_search_value is associated with filled orders\r\n    // the original search_vlue is associated with unfilled orders\r\n    return (\r\n      <table>\r\n        <TableHeading />\r\n        <SearchTable searchVal={secondary_search_value} />\r\n      </table>\r\n    );\r\n  } else {\r\n    return (\r\n      <table>\r\n        <TableHeading />\r\n        <NoSearchTable />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nFilledTable.propTypes = {\r\n  search_value: PropTypes.string,\r\n  secondary_search_value: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  search: { search_value, secondary_search_value }\r\n}) => {\r\n  return {\r\n    search_value,\r\n    secondary_search_value\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FilledTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction ModalXButton({ toggleModal }) {\r\n  // on click, hide the modal\r\n  return (\r\n    <button\r\n      className=\"modal-close-button bg-theme-yellow text-theme-blue\"\r\n      onClick={() => toggleModal()}\r\n    >\r\n      Close\r\n    </button>\r\n  );\r\n}\r\n\r\nModalXButton.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleModal }\r\n)(ModalXButton);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\nfunction DoughnutChart({ books }) {\r\n  const [subgenres, determineSubgenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (books) {\r\n      // this function return an array of objects with all the subgenres in the inventory\r\n      // and total number of books for each subgenre\r\n      determineSubgenres(\r\n        books.reduce((acc, curr) => {\r\n          if (acc.filter(item => item.subgenre === curr.subgenre).length) {\r\n            acc.map(item => {\r\n              if (item.subgenre === curr.subgenre) {\r\n                item.total++;\r\n                return item;\r\n              } else {\r\n                return item;\r\n              }\r\n            });\r\n\r\n            return acc;\r\n          } else {\r\n            acc.push({\r\n              subgenre: curr.subgenre,\r\n              total: 1\r\n            });\r\n            return acc;\r\n          }\r\n        }, [])\r\n      );\r\n    }\r\n  }, [books]);\r\n\r\n  if (subgenres.length) {\r\n    let labels = subgenres.reduce((acc, curr) => {\r\n      acc.push(curr.subgenre);\r\n      return acc;\r\n    }, []);\r\n\r\n    let numbers = subgenres.reduce((acc, curr) => {\r\n      acc.push(curr.total);\r\n      return acc;\r\n    }, []);\r\n\r\n    // object to pass into doughtnut chart\r\n    const data = {\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\r\n              \"#45546c\",\r\n              \"#5cb85c\",\r\n              \"#ffde59\",\r\n              \"#d2c7ff\",\r\n              \"#d9534f\",\r\n              \"#FFA500\"\r\n            ],\r\n            data: numbers\r\n          }\r\n        ],\r\n        labels\r\n      },\r\n      options = {\r\n        legend: {\r\n          boxWidth: \"20\",\r\n          fontFamily: \"Montserrat\",\r\n          fontSize: \"16\",\r\n          position: \"left\"\r\n        }\r\n      };\r\n\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <Doughnut data={data} options={options} />\r\n      </div>\r\n    );\r\n  } else return <Spinner />;\r\n}\r\n\r\nDoughnutChart.propTypes = {\r\n  books: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      genre: PropTypes.string.isRequired,\r\n      subgenre: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default DoughnutChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\nimport DoughnutChart from \"components/admin/inventory/modal/DoughnutChart\";\r\n\r\nfunction SummaryModal({ books }) {\r\n  const [totalInventory, setTotalInventory] = useState(0),\r\n    [totalTitles, setTotalTitles] = useState(0),\r\n    [totalSaleValue, setTotalSaleValue] = useState(0),\r\n    [mostStocked, determineMostStocked] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTotalInventory(\r\n      books.reduce((acc, current) => {\r\n        let newAcc = acc + current.quantity;\r\n        return newAcc;\r\n      }, 0)\r\n    );\r\n\r\n    setTotalTitles(books.length);\r\n\r\n    setTotalSaleValue(\r\n      books.reduce((acc, curr) => {\r\n        let totalVal =\r\n          parseFloat(curr.salePrice.substring(1)) * curr.quantity +\r\n          parseFloat(acc);\r\n\r\n        return totalVal.toFixed(2);\r\n      }, 0)\r\n    );\r\n\r\n    determineMostStocked(\r\n      books.reduce(\r\n        (acc, curr) => {\r\n          if (curr.quantity > acc.quantity) acc = curr;\r\n\r\n          return acc;\r\n        },\r\n        { quantity: 0 }\r\n      )\r\n    );\r\n  }, [books]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"inventory-summary-modal-title\">Summary</h1>\r\n      <div className=\"modal-summary-content\">\r\n        <div className=\"modal-summary-group-container\">\r\n          <div className=\"modal-summary-info\">\r\n            <h3>Info</h3>\r\n            <p>\r\n              <span className=\"item-label\">Quantity:&nbsp;&nbsp;</span>{\" \"}\r\n              {totalInventory} books\r\n            </p>\r\n            <p>\r\n              <span className=\"item-label\">Total Titles:&nbsp;&nbsp;</span>{\" \"}\r\n              {totalTitles}\r\n            </p>\r\n            <p>\r\n              <span className=\"item-label\">Sale Value:&nbsp;&nbsp;</span> £\r\n              {totalSaleValue}\r\n            </p>\r\n            <p>\r\n              <span className=\"item-label\">Average Price:&nbsp;&nbsp;</span>{\" \"}\r\n              {(totalSaleValue / totalInventory).toFixed(2)}\r\n            </p>\r\n            <p>\r\n              <span className=\"item-label\">Most Stocked:&nbsp;&nbsp;</span>{\" \"}\r\n              {mostStocked.title}, {mostStocked.author}\r\n            </p>\r\n          </div>\r\n          <DoughnutChart books={books} />\r\n        </div>\r\n        <ModalCloseButton />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSummaryModal.propTypes = {\r\n  books: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      publicationDate: PropTypes.number.isRequired,\r\n      genre: PropTypes.string.isRequired,\r\n      subgenre: PropTypes.string.isRequired,\r\n      salePrice: PropTypes.string.isRequired,\r\n      quantity: PropTypes.number.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { books }\r\n  }\r\n}) => {\r\n  if (books) {\r\n    return {\r\n      books\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"books\", orderBy: [\"author\"] }])\r\n)(SummaryModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\n\r\nfunction SummaryModal({\r\n  view_item: {\r\n    title,\r\n    author,\r\n    genre,\r\n    publicationDate,\r\n    imageLocation,\r\n    isbn,\r\n    salePrice,\r\n    quantity\r\n  }\r\n}) {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"inventory-view-modal-title text-theme-blue\">Details</h1>\r\n      <div className=\"modal-view-content\">\r\n        <img src={imageLocation} className=\"modal-view-image\" alt=\"book\" />\r\n        <div className=\"modal-view-item-info text-theme-blue\">\r\n          <p>\r\n            <span className=\"item-label\">Title: </span>&nbsp;&nbsp;{title}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">Author: </span>&nbsp;&nbsp;{author}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">Genre: </span>&nbsp;&nbsp;{genre}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">ISBN: </span>&nbsp;&nbsp;{isbn}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">Sale Price: </span>&nbsp;&nbsp;\r\n            {salePrice}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">Publication Date: </span>&nbsp;&nbsp;\r\n            {publicationDate}\r\n          </p>\r\n          <p>\r\n            <span className=\"item-label\">In Stock: </span>&nbsp;&nbsp;{quantity}\r\n          </p>\r\n        </div>\r\n        <ModalCloseButton />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSummaryModal.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    genre: PropTypes.string.isRequired,\r\n    imageLocation: PropTypes.string.isRequired,\r\n    isbn: PropTypes.number.isRequired,\r\n    publicationDate: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    salePrice: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(SummaryModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SummaryModal from \"components/admin/inventory/modal/SummaryModal\";\r\nimport ViewItemModal from \"components/admin/inventory/modal/ViewItemModal\";\r\n\r\nfunction InventoryModalBody({ modal_type }) {\r\n  let inventoryModalBody;\r\n\r\n  // modal_type determines whether to display the inventory summary or an view item modal\r\n  switch (modal_type) {\r\n    case \"summary\":\r\n      inventoryModalBody = <SummaryModal />;\r\n      break;\r\n\r\n    case \"view\":\r\n      inventoryModalBody = <ViewItemModal />;\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  }\r\n\r\n  return <div className=\"inventory-modal\">{inventoryModalBody}</div>;\r\n}\r\n\r\nInventoryModalBody.propTypes = {\r\n  modal_type: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { modal_type } }) => {\r\n  return {\r\n    modal_type\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(InventoryModalBody);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect, firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\nimport { getDate } from \"helpers/dateFuncs\";\r\n\r\nfunction AddMemberModal({ firebase, firestore, toggleModal }) {\r\n  // values for the form are all stored in state using react hooks\r\n  const [firstName, setFirstName] = useState(),\r\n    [surname, setSurname] = useState(),\r\n    [email, setEmail] = useState(),\r\n    [dob, setDob] = useState(),\r\n    [position, setPosition] = useState(),\r\n    [permissions, setPermissions] = useState(),\r\n    [image, setImage] = useState();\r\n\r\n  function submitHandler(e) {\r\n    // prevent default browser behaviour\r\n    e.preventDefault(e);\r\n\r\n    // hide the modal\r\n    toggleModal();\r\n\r\n    // create a reference to the image that has been uploaded\r\n    var storageRef = firebase\r\n      .storage()\r\n      .ref(`images/${image.name}`)\r\n      .put(image);\r\n\r\n    // upload the image to the firebase's cloud services\r\n    // save the url of the storage location\r\n    // create a new member object\r\n    // add the new member to the staff collection\r\n    storageRef.on(\r\n      \"state_changed\",\r\n      null,\r\n      error => {\r\n        console.warn(error);\r\n      },\r\n      () => {\r\n        storageRef.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n          // object representing the new memner\r\n          const newMember = {\r\n            // getDate is a helper function which returns a date in an appropriate format\r\n            dateAdded: getDate(),\r\n            dob,\r\n            email,\r\n            firstName,\r\n            fullName: `${firstName} ${surname}`,\r\n            // downloadUrl is a reference to the cloud storage url on firebase's cloud\r\n            imageLocation: downloadURL,\r\n            position,\r\n            permissions,\r\n            surname\r\n          };\r\n\r\n          // store the member object in staff NoSql staff collection\r\n          firestore.add({ collection: \"staff\" }, newMember);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => submitHandler(e)} className=\"add-staff-form\">\r\n      <div className=\"staff-input-group\">\r\n        <h2>New Staff Member</h2>\r\n        <div className=\"staff-form-group\">\r\n          <div className=\"member-info\">\r\n            <div className=\"member-names-group\">\r\n              <div className=\"label-input-group\">\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"First Name\"\r\n                  onChange={e => setFirstName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"label-input-group\">\r\n                <label htmlFor=\"surname\">Surname:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"surname\"\r\n                  onChange={e => setSurname(e.target.value)}\r\n                  required\r\n                />\r\n              </div>{\" \"}\r\n            </div>\r\n            <div className=\"member-email-dob-group\">\r\n              <div className=\"label-input-group\">\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"label-input-group\">\r\n                <label htmlFor=\"dob\">Date of Birth:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  onChange={e => setDob(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"member-permissions-position-group\">\r\n              <div className=\"label-input-group\">\r\n                <label htmlFor=\"position\">Position:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"position\"\r\n                  onChange={e => setPosition(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"permissions-label-input-group\">\r\n                <label htmlFor=\"permissions\">Permissions:</label>\r\n                <div className=\"permissions-inputs-labels\">\r\n                  <div className=\"radio-input-label-group\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"permissions\"\r\n                      onChange={e => setPermissions(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor=\"permissions\">All</label>\r\n                  </div>\r\n                  <div className=\"radio-input-label-group\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"permissions\"\r\n                      onChange={e => setPermissions(e.target.value)}\r\n                      required\r\n                    />\r\n                    <label htmlFor=\"permissions\">Regular</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"member-photo\">\r\n            <div className=\"label-input-group\">\r\n              <label htmlFor=\"firstName\">Upload Photo:</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                onChange={e => setImage(e.target.files[0])}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <input className=\"add-button\" type=\"submit\" value=\"Add\" />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddMemberModal.propTypes = {\r\n  firebase: PropTypes.object,\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect(),\r\n  connect(\r\n    null,\r\n    {\r\n      toggleModal\r\n    }\r\n  )\r\n)(AddMemberModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction LinkButton({ className, onClick, value }) {\r\n  return (\r\n    <button onClick={onClick} className={`link-button ${className}`}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nLinkButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    toggleModal\r\n  }\r\n)(LinkButton);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { setEditType } from \"actions/editActions\";\r\n\r\nimport InputSaveButton from \"components/buttons/InputSaveButton\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\n\r\nclass EditMemberForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // theres properties are all references to the dom input elements\r\n    // this process allows you to set default values for the inputs\r\n    // which helps user experience in editing them\r\n    this.firstNameInput = React.createRef();\r\n    this.surnameInput = React.createRef();\r\n    this.emailInput = React.createRef();\r\n    this.dobInput = React.createRef();\r\n    this.positionInput = React.createRef();\r\n  }\r\n\r\n  clickHandler = e => {\r\n    // prevent default browser behaviour\r\n    e.preventDefault();\r\n\r\n    // reset edit type\r\n    this.props.setEditType(\"\");\r\n  };\r\n\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      firestore,\r\n      setEditType,\r\n      view_item: {\r\n        dateAdded,\r\n        dob,\r\n        email,\r\n        firstName,\r\n        id,\r\n        imageLocation,\r\n        permissions,\r\n        position,\r\n        surname\r\n      }\r\n    } = this.props;\r\n\r\n    // first delete the original document that the user is editing\r\n    firestore.delete({ collection: \"staff\", doc: id });\r\n\r\n    // create an object representing the updated staff member\r\n    // if the ref does not have a current value then return the original value\r\n    const updMember = {\r\n      dateAdded,\r\n      dob: this.dobInput.current.value || dob,\r\n      email: this.emailInput.current.value || email,\r\n      firstName: this.firstNameInput.current.value || firstName,\r\n      imageLocation,\r\n      position: this.positionInput.current.value || position,\r\n      permissions,\r\n      surname: this.surnameInput.current.value || surname\r\n    };\r\n\r\n    firestore\r\n      // add the updated member to the staff collection\r\n      .add({ collection: \"staff\" }, updMember)\r\n      // reset the edit type\r\n      .then(() => setEditType(\"\"));\r\n  };\r\n\r\n  render() {\r\n    // all of these props are accessed through the redux store\r\n    // this is to allow them to be set as default values to the inputs on the form\r\n    const { email, firstName, surname, dob, position } = this.props.view_item;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form\r\n          className=\"edit-member-form\"\r\n          onSubmit={e => this.onSubmitHandler(e)}\r\n        >\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"firstName\">First Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              defaultValue={firstName}\r\n              ref={this.firstNameInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"surname\">Surname: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"surname\"\r\n              defaultValue={surname}\r\n              ref={this.surnameInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              defaultValue={email}\r\n              ref={this.emailInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"position\">Position: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"position\"\r\n              defaultValue={position}\r\n              ref={this.positionInput}\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"dob\">DoB: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"dob\"\r\n              defaultValue={dob}\r\n              ref={this.dobInput}\r\n            />\r\n          </div>\r\n          <div className=\"edit-member-button-group\">\r\n            <InputSaveButton type=\"submit\" />\r\n            <LinkButton\r\n              type=\"button\"\r\n              value=\"Cancel\"\r\n              onClick={e => this.clickHandler(e)}\r\n            />\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditMemberForm.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n  setEditType: PropTypes.func.isRequired,\r\n  view_item: PropTypes.shape({\r\n    dob: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    firstName: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    surname: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { setEditType }\r\n  ),\r\n  firestoreConnect()\r\n)(EditMemberForm);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport { setEditType } from \"actions/editActions\";\r\n\r\nimport EditMemberForm from \"components/admin/staff/modal/EditMemberForm\";\r\n\r\nfunction EditMemberContent({ setEditType, view_item: { firstName, surname } }) {\r\n  useEffect(() => {\r\n    // when the component dismounts, reset the editType\r\n    return () => {\r\n      setEditType(\"\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"staff-edit-modal\">\r\n      <h1 className=\"edit-member-title\">\r\n        Editing{\" \"}\r\n        <span>\r\n          {firstName} {surname}\r\n        </span>\r\n      </h1>\r\n      <EditMemberForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nEditMemberContent.propTypes = {\r\n  setEditType: PropTypes.func.isRequired,\r\n  view_item: PropTypes.shape({\r\n    firstName: PropTypes.string.isRequired,\r\n    surname: PropTypes.string.isRequired,\r\n    dob: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setEditType }\r\n)(EditMemberContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nfunction DeleteMemberIcon({ firestore, member: { id }, toggleModal }) {\r\n  function clickHandler() {\r\n    // hide the modal\r\n    toggleModal();\r\n    // delete the member from the staff NoSql collection using his id which is available by subscription to the redux store\r\n    firestore.delete({ collection: \"staff\", doc: id });\r\n  }\r\n\r\n  return <i className=\"fas fa-trash\" onClick={() => clickHandler()} />;\r\n}\r\n\r\nDeleteMemberIcon.propTypes = {\r\n  firestore: PropTypes.object,\r\n  member: PropTypes.shape({\r\n    id: PropTypes.string.isRequired\r\n  }),\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    null,\r\n    { toggleModal }\r\n  ),\r\n  firestoreConnect()\r\n)(DeleteMemberIcon);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport { setEditType } from \"actions/editActions\";\r\n\r\nimport DeleteMemberIcon from \"components/admin/staff/modal/DeleteMemberIcon\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\n\r\nfunction ViewMemberContent({\r\n  permissions,\r\n  setEditType,\r\n  view_item,\r\n  view_item: {\r\n    id,\r\n    dateAdded,\r\n    dob,\r\n    email,\r\n    firstName,\r\n    imageLocation,\r\n    position,\r\n    surname\r\n  }\r\n}) {\r\n  return (\r\n    <div className=\"staff-view-modal-container\">\r\n      <div>\r\n        <h1 className=\"staff-view-modal-title\">\r\n          {firstName} {surname}{\" \"}\r\n          <span>\r\n            <DeleteMemberIcon member={view_item} />\r\n          </span>\r\n        </h1>\r\n        <h5>{id}</h5>\r\n      </div>\r\n      <div className=\"staff-modal-view-content\">\r\n        <img\r\n          src={imageLocation}\r\n          className=\"staff-modal-view-image\"\r\n          alt=\"book\"\r\n        />\r\n        <div className=\"modal-view-item-info\">\r\n          <p>{email}</p>\r\n          <p>{position}</p>\r\n          <p>DoB: {dob}</p>\r\n          <p>Added to Database: {dateAdded}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"staff-modal-view-button-group\">\r\n        <ModalCloseButton />\r\n        {permissions === \"all\" && (\r\n          <LinkButton value=\"Edit\" onClick={() => setEditType(\"edit_member\")} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewMemberContent.propTypes = {\r\n  permissions: PropTypes.string.isRequired,\r\n  setEditType: PropTypes.func.isRequired,\r\n  view_item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    firstName: PropTypes.string.isRequired,\r\n    surname: PropTypes.string.isRequired,\r\n    dob: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    imageLocation: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  edit: { edit_type },\r\n  firebase: {\r\n    profile: { permissions }\r\n  },\r\n  modal: { view_item }\r\n}) => {\r\n  return {\r\n    edit_type,\r\n    permissions,\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setEditType }\r\n)(ViewMemberContent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport EditMemberContent from \"components/admin/staff/modal/EditMemberContent\";\r\nimport ViewMemberContent from \"components/admin/staff/modal/ViewMemberContent\";\r\n\r\nfunction ViewDetailsModal({ edit_type }) {\r\n  let modalContent;\r\n\r\n  // if the user is editing then display the edit content\r\n  if (edit_type === \"edit_member\") modalContent = <EditMemberContent />;\r\n  // viewing the member is the default option\r\n  else modalContent = <ViewMemberContent />;\r\n\r\n  return <React.Fragment>{modalContent}</React.Fragment>;\r\n}\r\n\r\nViewDetailsModal.propTypes = {\r\n  edit_type: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ edit: { edit_type } }) => {\r\n  return {\r\n    edit_type\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewDetailsModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport AddMemberModal from \"components/admin/staff/modal/AddMemberModal\";\r\nimport ViewDetailsModal from \"components/admin/staff/modal/ViewDetailsModal\";\r\n\r\nfunction StaffModal({ modal_type }) {\r\n  let staffModal;\r\n\r\n  // switch statement evaluates the modal type to determine which type of modal should be displayed\r\n  switch (modal_type) {\r\n    case \"view\":\r\n      staffModal = <ViewDetailsModal />;\r\n      break;\r\n\r\n    case \"add\":\r\n      staffModal = <AddMemberModal />;\r\n      break;\r\n\r\n    default:\r\n      return <div />;\r\n  }\r\n\r\n  return <React.Fragment>{staffModal}</React.Fragment>;\r\n}\r\n\r\nStaffModal.propTypes = {\r\n  modal_type: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { modal_type } }) => {\r\n  return {\r\n    modal_type\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(StaffModal);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\n\r\nfunction ViewFilledModal({\r\n  view_item: {\r\n    id,\r\n    company,\r\n    filledDate,\r\n    date,\r\n    quantity,\r\n    book: { title, author, genre, subgenre, isbn }\r\n  },\r\n  firestore,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    // hide modal\r\n    toggleModal();\r\n\r\n    // send a delete request to the firebase filledOrders collection with a reference\r\n    // to the ID of the filledOrder which is retreived from the view_item in the redux store\r\n    firestore.delete({ collection: \"filledOrders\", doc: id });\r\n  }\r\n  return (\r\n    <div className=\"orders-view-modal\">\r\n      <div className=\"orders-view-modal-titles\">\r\n        <h1>{title}</h1>\r\n        <h5>Company: {company}</h5>\r\n        <h5>Receipt ID: {id}</h5>\r\n      </div>\r\n      <div className=\"orders-view-modal-content\">\r\n        <div className=\"orders-view-modal-book\">\r\n          <h3>Info</h3>\r\n          <p>\r\n            <span className=\"order-label\">Author:&nbsp;&nbsp;</span>\r\n            {author}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Title:&nbsp;&nbsp;</span> {title}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">ISBN:&nbsp;&nbsp;</span> {isbn}{\" \"}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Genre:&nbsp;&nbsp;</span>\r\n            {genre} ({subgenre})\r\n          </p>\r\n        </div>\r\n        <div className=\"orders-view-modal-receipt\">\r\n          <h3>Receipt</h3>\r\n          <p>\r\n            <span className=\"order-label\">Company:&nbsp;&nbsp;</span> {company}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">ID:&nbsp;&nbsp;</span> {id}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Sent:&nbsp;&nbsp;</span> {date}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Filled:&nbsp;&nbsp;</span>{\" \"}\r\n            {filledDate}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Quantity:&nbsp;&nbsp;</span>\r\n            {quantity}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"orders-view-modal-buttons\">\r\n        <ModalCloseButton />\r\n        <LinkButton\r\n          className=\"text-theme-red\"\r\n          value=\"Remove from Database\"\r\n          onClick={() => clickHandler()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewFilledModal.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    company: PropTypes.string.isRequired,\r\n    filledDate: PropTypes.string.isRequired,\r\n    book: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired,\r\n      publicationDate: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      genre: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      toggleModal\r\n    }\r\n  )\r\n)(ViewFilledModal);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\nimport { getDate } from \"helpers/dateFuncs\";\r\n\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\n\r\nfunction ViewUnfilledModal({\r\n  view_item: {\r\n    id,\r\n    company,\r\n    toBeFilled,\r\n    date,\r\n    quantity,\r\n    book: { title, author, genre, subgenre, isbn, publicationDate }\r\n  },\r\n  firestore,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    // the data package to be sent along with the firebase queries\r\n    // is extracted from the view_item state in the redux store\r\n    const filledOrder = {\r\n      book: {\r\n        author,\r\n        title,\r\n        isbn,\r\n        genre,\r\n        subgenre,\r\n        publicationDate\r\n      },\r\n      company,\r\n      date,\r\n      // getDate is a helper function which return the current date in an appropriate format\r\n      filledDate: getDate(),\r\n      quantity\r\n    };\r\n\r\n    // hide the modal\r\n    toggleModal();\r\n\r\n    firestore\r\n      // delete the order from the unfilled orders NoSql collection\r\n      .delete({ collection: \"unfilledOrders\", doc: id })\r\n      // mark the order as filled by adding it to the filledOrders NoSQL collection\r\n      .then(firestore.add({ collection: \"filledOrders\" }, filledOrder));\r\n  }\r\n  return (\r\n    <div className=\"orders-view-modal\">\r\n      <div className=\"orders-view-modal-titles\">\r\n        <h1>{title}</h1>\r\n        <h5>Company: {company}</h5>\r\n        <h5>Receipt ID: {id}</h5>\r\n      </div>\r\n      <div className=\"orders-view-modal-content\">\r\n        <div className=\"orders-view-modal-book\">\r\n          <h3>Info</h3>\r\n          <p>\r\n            <span className=\"order-label\">Author:&nbsp;&nbsp;</span> {author}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Title:&nbsp;&nbsp;</span> {title}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">ISBN:&nbsp;&nbsp;</span> {isbn}{\" \"}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Genre:&nbsp;&nbsp;</span> {genre} (\r\n            {subgenre})\r\n          </p>\r\n        </div>\r\n        <div className=\"orders-view-modal-receipt\">\r\n          <h3>Receipt</h3>\r\n          <p>\r\n            <span className=\"order-label\">Company:&nbsp;&nbsp;</span> {company}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">ID:&nbsp;&nbsp;</span> {id}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Sent:&nbsp;&nbsp;</span> {date}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Expected Arrival:&nbsp;&nbsp;</span>{\" \"}\r\n            {toBeFilled}\r\n          </p>\r\n          <p>\r\n            <span className=\"order-label\">Quantity:&nbsp;&nbsp;</span>{\" \"}\r\n            {quantity}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"orders-view-modal-buttons\">\r\n        <ModalCloseButton />\r\n        <LinkButton\r\n          className=\"text-theme-red\"\r\n          value=\"Mark Filled\"\r\n          onClick={() => clickHandler()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewUnfilledModal.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    toBeFilled: PropTypes.string.isRequired,\r\n    company: PropTypes.string.isRequired,\r\n    book: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired,\r\n      publicationDate: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      genre: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      toggleModal\r\n    }\r\n  )\r\n)(ViewUnfilledModal);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\nimport { getDate } from \"helpers/dateFuncs\";\r\n\r\nfunction AddOrderModal({ firestore, toggleModal }) {\r\n  // all current values for the fields are stored as state using react hooks\r\n  const [author, setAuthor] = useState(),\r\n    [title, setTitle] = useState(),\r\n    [isbn, setIsbn] = useState(),\r\n    [publicationDate, setPublish] = useState(),\r\n    [genre, setGenre] = useState(),\r\n    [subgenre, setSubgenre] = useState(),\r\n    [quantity, setQuantity] = useState(),\r\n    [company, setCompany] = useState();\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault(e);\r\n\r\n    const inputWarning = document.querySelector(\".input-warning-message\"),\r\n      isbnLength = isbn.toString().length,\r\n      isbnInput = document.getElementById(\"isbnInput\"),\r\n      quantityInput = document.getElementById(\"quantityInput\");\r\n\r\n    // if you have entered an invalid isbn or quantity, display warning message\r\n    if (isbnLength !== 13 || !parseInt(quantity)) {\r\n      inputWarning.style.display = \"block\";\r\n\r\n      // if the isbn is incorrect, set the warning message text\r\n      if (isbnLength !== 13) {\r\n        inputWarning.innerHTML =\r\n          \"Please check again, all ISBNs must be 13 digits.\";\r\n        isbnInput.classList = \"warning-input\";\r\n\r\n        // after three seconds, hide the warning message\r\n        setTimeout(() => {\r\n          inputWarning.style.display = \"none\";\r\n          isbnInput.classList = \"\";\r\n        }, 3000);\r\n\r\n        return;\r\n      } else {\r\n        // else set the quantity message text\r\n        quantityInput.classList = \"warning-input\";\r\n        inputWarning.innerHTML =\r\n          \"Please check again, the quantity should be greater than zero.\";\r\n\r\n        // after three seconds hide the warning message\r\n        setTimeout(() => {\r\n          inputWarning.style.display = \"none\";\r\n          quantityInput.classList = \"\";\r\n        }, 3000);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    // assemble the data from the state which will be added to firebase\r\n    // for date and toBeFilled, call the date helper functions which will return a date in an appropriate format\r\n    const order = {\r\n      book: {\r\n        author,\r\n        title,\r\n        isbn: parseInt(isbn),\r\n        publicationDate: parseInt(publicationDate),\r\n        genre,\r\n        subgenre\r\n      },\r\n      quantity: parseInt(quantity),\r\n      company,\r\n      date: getDate(),\r\n      toBeFilled: getDate(\"filled\")\r\n    };\r\n\r\n    // add document (order object) to the collection of unfilledOrders on firebase\r\n    firestore.add({ collection: \"unfilledOrders\" }, order);\r\n\r\n    // hide the modal\r\n    toggleModal();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => submitHandler(e)} className=\"add-order-form\">\r\n      <div className=\"book-input-group\">\r\n        <h2>Book</h2>\r\n        <div className=\"order-form-group\">\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"Author\">Author:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Author\"\r\n              onChange={e => setAuthor(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"Title\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Title\"\r\n              onChange={e => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"ISBN\">ISBN:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"ISBN\"\r\n              id=\"isbnInput\"\r\n              onChange={e => setIsbn(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"Publication Date\">Published:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1000\"\r\n              max=\"2019\"\r\n              name=\"Publication Date\"\r\n              onChange={e => setPublish(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"order-form-group\">\r\n          <div className=\"label-input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"genre\"\r\n              value=\"fiction\"\r\n              onChange={e => setGenre(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"fiction\">Fiction</label>\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"genre\"\r\n              value=\"non-fiction\"\r\n              onChange={e => setGenre(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"fiction\">Non-Fiction</label>\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"Sub Genre\">Sub Genre:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Sub Genre\"\r\n              onChange={e => setSubgenre(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"order-input-group\">\r\n        <h2>Order</h2>\r\n        <div className=\"order-form-group last-group\">\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"quantity\">Quantity:</label>\r\n            <input\r\n              type=\"number\"\r\n              max=\"100\"\r\n              min=\"0\"\r\n              name=\"Quantity\"\r\n              onChange={e => setQuantity(e.target.value)}\r\n              id=\"quantityInput\"\r\n            />\r\n          </div>\r\n          <div className=\"label-input-group\">\r\n            <label htmlFor=\"company\">Company:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"company\"\r\n              onChange={e => setCompany(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p className=\"input-warning-message\" />\r\n      <input className=\"add-button\" type=\"submit\" value=\"Add\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddOrderModal.propTypes = {\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    null,\r\n    { toggleModal }\r\n  )\r\n)(AddOrderModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ViewFilledModal from \"components/admin/orders/modal/ViewFilledModal\";\r\nimport ViewUnfilledModal from \"components/admin/orders/modal/ViewUnfilledModal\";\r\nimport AddOrderModal from \"components/admin/orders/modal/AddOrderModal\";\r\n\r\nfunction OrdersModal({ modal_type }) {\r\n  let ordersModal;\r\n\r\n  // depending on the button clicked and the modal_type action payload,\r\n  // the orders modal maybe relating to a filled order, an unfilled order or an add order event\r\n  switch (modal_type) {\r\n    case \"filled-view\":\r\n      ordersModal = <ViewFilledModal />;\r\n      break;\r\n\r\n    case \"unfilled-view\":\r\n      ordersModal = <ViewUnfilledModal />;\r\n      break;\r\n\r\n    case \"add\":\r\n      ordersModal = <AddOrderModal />;\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  }\r\n\r\n  return <div className=\"orders-modal\">{ordersModal}</div>;\r\n}\r\n\r\nOrdersModal.propTypes = {\r\n  modal_type: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { modal_type } }) => {\r\n  return {\r\n    modal_type\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(OrdersModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport ModalCloseButton from \"components/modal/ModalCloseButton\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\n\r\nfunction SalesModal({\r\n  view_item: {\r\n    id,\r\n    date,\r\n    income,\r\n    quantity,\r\n    book: { title, author, isbn, genre, subgenre }\r\n  },\r\n  firestore,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    // delete from the NoSql Sales collection using the specific item id\r\n    // to determine which collection to delete\r\n    firestore.delete({ collection: \"sales\", doc: id });\r\n\r\n    // hide the modal\r\n    toggleModal();\r\n  }\r\n  return (\r\n    <div className=\"sales-view-modal\">\r\n      <div className=\"sales-view-modal-titles\">\r\n        <h1>{title}</h1>\r\n        <h5>Sales ID: {id}</h5>\r\n      </div>\r\n      <div className=\"sales-view-modal-content\">\r\n        <div className=\"sales-view-modal-book\">\r\n          <h3>Info</h3>\r\n          <p>Author: {author}</p>\r\n          <p>Title: {title}</p>\r\n          <p>ISBN: {isbn} </p>\r\n          <p>\r\n            Genre: {genre} ({subgenre})\r\n          </p>\r\n        </div>\r\n        <div className=\"sales-view-modal-receipt\">\r\n          <h3>Receipt</h3>\r\n          <p>Date: {date}</p>\r\n          <p>ID: {id}</p>\r\n          <p>Quantity: {quantity}</p>\r\n          <p>Price: {income}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"sales-view-modal-buttons\">\r\n        <ModalCloseButton />\r\n        <LinkButton\r\n          value=\"Remove from Database\"\r\n          onClick={() => clickHandler()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSalesModal.propTypes = {\r\n  view_item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    income: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    book: PropTypes.shape({\r\n      author: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired\r\n    })\r\n  }),\r\n  firestore: PropTypes.object,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ modal: { view_item } }) => {\r\n  return {\r\n    view_item\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      toggleModal\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// admin modals\r\nimport InventoryModal from \"components/admin/inventory/modal/InventoryModalBody\";\r\nimport StaffModal from \"components/admin/staff/modal/StaffModal\";\r\nimport OrdersModal from \"components/admin/orders/modal/OrdersModal\";\r\nimport SalesModal from \"components/admin/sales/modal/SalesModal\";\r\n\r\nfunction ModalBody({ location: { pathname } }) {\r\n  let modalBody;\r\n\r\n  // switch statement assesses what route the user is on and\r\n  // return appropriate modal\r\n  switch (pathname) {\r\n    case \"/inventory\":\r\n      modalBody = <InventoryModal />;\r\n      break;\r\n\r\n    case \"/staff\":\r\n      modalBody = <StaffModal />;\r\n      break;\r\n\r\n    case \"/orders\":\r\n      modalBody = <OrdersModal />;\r\n      break;\r\n\r\n    case \"/sales\":\r\n      modalBody = <SalesModal />;\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  }\r\n  return <React.Fragment>{modalBody}</React.Fragment>;\r\n}\r\n\r\nModalBody.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default withRouter(ModalBody);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal, setViewingItem } from \"actions/modalActions\";\r\n\r\nimport ModalXButton from \"components/modal/ModalXButton\";\r\nimport ModalBody from \"components/modal/ModalBody\";\r\n\r\nfunction Modal({ setViewingItem, toggleModal }) {\r\n  useEffect(() => {\r\n    // when the modal mounts listen for clicks outside of the modal\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      if (e.target.contains(document.querySelector(\".modal-overlay\"))) {\r\n        // upon an outside click, hide the modal\r\n        toggleModal(\"\");\r\n\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n\r\n      return function cleanUp() {\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      };\r\n    });\r\n\r\n    return () => {\r\n      // on component dismounts, reset the viewing item for upcoming modals\r\n      setViewingItem(\"\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <ModalXButton />\r\n        <ModalBody />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(Modal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport searchImg from \"img/widgets/search.png\";\r\n\r\nfunction SearchIcon({ onClick }) {\r\n  return (\r\n    <img\r\n      src={searchImg}\r\n      onClick={onClick}\r\n      className=\"search-icon\"\r\n      alt=\"search\"\r\n    />\r\n  );\r\n}\r\n\r\nSearchIcon.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default SearchIcon;\r\n","import {\r\n  SEARCH_TYPE,\r\n  SEARCH_VALUE,\r\n  SECONDARY_SEARCH_VALUE\r\n} from \"actions/types\";\r\n\r\nexport const setSearchType = value => {\r\n  return {\r\n    type: SEARCH_TYPE,\r\n    payload: value\r\n  };\r\n};\r\n\r\n// set the value of the search\r\nexport const setSearchValue = value => {\r\n  return {\r\n    type: SEARCH_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n\r\n// in the case that there are two search components in one page, this sets the search value of the second search component\r\nexport const setSecondarySearchValue = value => {\r\n  return {\r\n    type: SECONDARY_SEARCH_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport SearchIcon from \"components/general/SearchIcon\";\r\n\r\nimport { setSearchValue, setSecondarySearchValue } from \"actions/searchActions\";\r\n\r\nfunction SearchInputGroup({\r\n  firestore,\r\n  placeholder,\r\n  second,\r\n  setSearchValue,\r\n  setSecondarySearchValue,\r\n  type\r\n}) {\r\n  useEffect(() => {\r\n    return () => {\r\n      // when the component dismounts, reset both search values\r\n      setSearchValue(\"\");\r\n      setSecondarySearchValue(\"\");\r\n    };\r\n  });\r\n\r\n  function searchClickHandler() {\r\n    // if user clicks search input that is active nothing happens\r\n    if (document.querySelector(\".active-input\")) return;\r\n\r\n    let input;\r\n\r\n    // if second has been passed in as a prop, then this page has two search components\r\n    // and the user has clicked the second search icon\r\n    // else user has clicked on the first (or only) search icon\r\n    second\r\n      ? (input = document.querySelectorAll(\".search-input\")[1])\r\n      : (input = document.querySelectorAll(\".search-input\")[0]);\r\n\r\n    // set the second search input as the active one\r\n    if (input) input.className = \"active-input\";\r\n\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      // grab the active search input\r\n      const activeInput = document.querySelector(\".active-input\");\r\n\r\n      if (\r\n        // if there is an active input, as long as the click target wasn't the active input or the search icon\r\n        activeInput &&\r\n        e.target !== activeInput &&\r\n        e.target !== activeInput.nextElementSibling\r\n      ) {\r\n        // then reset the input value and remove it's active status\r\n        activeInput.value = \"\";\r\n        activeInput.className = \"search-input\";\r\n\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n    });\r\n  }\r\n  function onChangeHandler(e, bool) {\r\n    bool\r\n      ? setSecondarySearchValue(e.target.value)\r\n      : setSearchValue(e.target.value);\r\n\r\n    // depending on the type of the search\r\n    // change the query to determine which NoSql database is being queried\r\n    switch (type) {\r\n      // for each collection, assume the user may be searching through one or more field\r\n      case \"inventory\":\r\n        firestore.get({\r\n          collection: \"books\",\r\n          where: [\"author\", \"==\", e.target.value],\r\n          // sync the value into the redux state under the following name\r\n          storeAs: \"authorFiltered\"\r\n        });\r\n        firestore.get({\r\n          collection: \"books\",\r\n          where: [\"title\", \"==\", e.target.value],\r\n          storeAs: \"titleFiltered\"\r\n        });\r\n\r\n        break;\r\n\r\n      case \"unfilled\":\r\n        firestore.get({\r\n          collection: \"unfilledOrders\",\r\n          where: [\"date\", \"==\", e.target.value],\r\n          storeAs: \"unfilledFiltered\"\r\n        });\r\n\r\n        break;\r\n\r\n      case \"filled\":\r\n        firestore.get({\r\n          collection: \"filledOrders\",\r\n          where: [\"date\", \"==\", e.target.value],\r\n          storeAs: \"filledFiltered\"\r\n        });\r\n\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-group\">\r\n      {!second ? (\r\n        <input\r\n          className=\"search-input\"\r\n          onChange={e => onChangeHandler(e)}\r\n          placeholder={placeholder}\r\n          type=\"text\"\r\n        />\r\n      ) : (\r\n        <input\r\n          className=\"search-input\"\r\n          onChange={e => onChangeHandler(e, true)}\r\n          placeholder={placeholder}\r\n          type=\"text\"\r\n        />\r\n      )}\r\n\r\n      <SearchIcon onClick={() => searchClickHandler()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchInputGroup.propTypes = {\r\n  firestore: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  second: PropTypes.bool,\r\n  setSearchValue: PropTypes.func.isRequired,\r\n  setSecondarySearchValue: PropTypes.func.isRequired,\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    null,\r\n    {\r\n      setSearchValue,\r\n      setSecondarySearchValue\r\n    }\r\n  ),\r\n  firestoreConnect()\r\n)(SearchInputGroup);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nimport ViewDetailsButton from \"components/buttons/ViewDetailsButton\";\r\n\r\nfunction UnfilledOrderItem({\r\n  item,\r\n  item: {\r\n    date,\r\n    book: { title },\r\n    quantity\r\n  },\r\n  setViewingItem,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    setViewingItem(item);\r\n    toggleModal(\"unfilled-view\");\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{date}</td>\r\n      <td>{title}</td>\r\n      <td>{quantity}</td>\r\n      <td>\r\n        <ViewDetailsButton\r\n          onClick={() => clickHandler(item)}\r\n          className=\"inventory-view-details-button\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nUnfilledOrderItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    toBeFilled: PropTypes.string.isRequired,\r\n    company: PropTypes.string.isRequired,\r\n    book: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired,\r\n      publicationDate: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      genre: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(UnfilledOrderItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport UnfilledOrderItem from \"components/admin/orders/table/unfilled/UnfilledOrderItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\nfunction NoSearchTable({ unfilledOrders }) {\r\n  return (\r\n    <tbody>\r\n      {!isLoaded(unfilledOrders) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td className=\"spinner-cell\">\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(unfilledOrders) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>You have no Unfilled Orders</h4>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        unfilledOrders.map(item => {\r\n          return <UnfilledOrderItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nNoSearchTable.propTypes = {\r\n  unfilledOrders: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { unfilledOrders }\r\n  }\r\n}) => {\r\n  if (unfilledOrders) {\r\n    return {\r\n      unfilledOrders\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"unfilledOrders\" }])\r\n)(NoSearchTable);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport UnfilledItem from \"components/admin/orders/table/unfilled/UnfilledOrderItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction SearchTable({ unfilledFiltered, searchVal }) {\r\n  return (\r\n    <tbody>\r\n      {!isLoaded(unfilledFiltered) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td className=\"spinner-cell\">\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(unfilledFiltered) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>{searchVal} returned no results!</h4>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        unfilledFiltered.map(item => {\r\n          return <UnfilledItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { unfilledFiltered }\r\n  }\r\n}) => {\r\n  if (unfilledFiltered) {\r\n    return {\r\n      unfilledFiltered\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect()\r\n)(SearchTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NoSearchTable from \"components/admin/orders/table/unfilled/NoSearchTable\";\r\nimport SearchTable from \"components/admin/orders/table/unfilled/SearchTable\";\r\nimport TableHeading from \"components/admin/orders/table/TableHeading\";\r\n\r\nfunction UnfilledTable({ search_value }) {\r\n  if (search_value) {\r\n    return (\r\n      <table>\r\n        <TableHeading />\r\n        <SearchTable searchVal={search_value} />\r\n      </table>\r\n    );\r\n  } else {\r\n    return (\r\n      <table>\r\n        <TableHeading />\r\n        <NoSearchTable />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nUnfilledTable.propTypes = {\r\n  search_value: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ search: { search_value } }) => {\r\n  return {\r\n    search_value\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnfilledTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport Orders from \"img/widgets/orders.png\";\r\nimport Staff from \"img/widgets/staff.png\";\r\nimport Sales from \"img/widgets/sales.png\";\r\nimport Inventory from \"img/widgets/inventory.png\";\r\nimport Search from \"img/widgets/search.png\";\r\n\r\nfunction WidgetNavigation({ location: { pathname } }) {\r\n  // the route that the user is currently on is assessed\r\n  // the corresponding widget for that route is not displayed\r\n  // for example: if user is on the orders pages, the orders widget is not displayed in the navigation\r\n  return (\r\n    <div className=\"widget-navigation-container\">\r\n      {pathname === \"/orders\" || (\r\n        <Link to=\"/orders\">\r\n          <img className=\"navigation-widget\" src={Orders} alt=\"Orders\" />\r\n          <h4>Orders</h4>\r\n        </Link>\r\n      )}\r\n      {pathname === \"/staff\" || (\r\n        <Link to=\"/staff\">\r\n          <img className=\"navigation-widget\" src={Staff} alt=\"Staff\" />\r\n          <h4>Staff</h4>\r\n        </Link>\r\n      )}\r\n      {pathname === \"/sales\" || (\r\n        <Link to=\"/sales\">\r\n          <img className=\"navigation-widget\" src={Sales} alt=\"Sales\" />\r\n          <h4>Sales</h4>\r\n        </Link>\r\n      )}\r\n      {pathname === \"/inventory\" || (\r\n        <Link to=\"/inventory\">\r\n          <img className=\"navigation-widget\" src={Inventory} alt=\"Inventory\" />\r\n          <h4>Inventory</h4>\r\n        </Link>\r\n      )}\r\n      {pathname === \"/search\" || (\r\n        <Link to=\"/search\">\r\n          <img className=\"navigation-widget\" src={Search} alt=\"Search\" />\r\n          <h4>Search</h4>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nWidgetNavigation.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default withRouter(WidgetNavigation);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AdminTitle from \"components/titles/AdminTitle\";\r\nimport AddOrderGroup from \"components/admin/orders/AddOrderGroup\";\r\nimport DropdownNavigation from \"components/navigation/DropdownNavigation\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport FilledTable from \"components/admin/orders/table/filled/FilledTable\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport SearchInputGroup from \"components/general/SearchInputGroup\";\r\nimport UnfilledTable from \"components/admin/orders/table/unfilled/UnfilledTable\";\r\nimport WidgetNavigation from \"components/navigation/WidgetNavigation\";\r\n\r\nfunction Orders({ uid, location: { pathname }, modal_open }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let modal;\r\n  // if the redux store says the the modal should be open, display the modal\r\n  if (modal_open) modal = <Modal />;\r\n\r\n  return (\r\n    <div className=\"admin-full-page-container\">\r\n      {modal}\r\n      <div className=\"topbar-container\">\r\n        <DropdownNavigation />\r\n        <WidgetNavigation pathname={pathname} />\r\n      </div>\r\n      <div className=\"admin-content-container orders-content-container\">\r\n        <ErrorBoundary>\r\n          <AdminTitle value=\"Orders\" />\r\n          <AddOrderGroup />\r\n          <div className=\"orders-tables-content\">\r\n            <div className=\"unfilled-orders-content\">\r\n              <h2>Unfilled</h2>\r\n              <UnfilledTable />\r\n              <SearchInputGroup placeholder=\"Search by Date\" type=\"unfilled\" />\r\n            </div>\r\n            <div className=\"filled-orders-content\">\r\n              <h2>Filled</h2>\r\n              <FilledTable />\r\n              <SearchInputGroup\r\n                placeholder=\"Search by Date\"\r\n                type=\"filled\"\r\n                second\r\n              />\r\n            </div>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOrders.propTypes = {\r\n  uid: PropTypes.string,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired\r\n  }),\r\n  modal_open: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    uid,\r\n    modal_open\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Orders);\r\n","import React from \"react\";\r\n\r\nfunction TableHeading() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <td>Date</td>\r\n        <td>Quantity</td>\r\n        <td>Income</td>\r\n        <td />\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nimport ViewDetailsButton from \"components/buttons/ViewDetailsButton\";\r\n\r\nfunction SalesTableItem({\r\n  item,\r\n  item: { date, quantity, income },\r\n  setViewingItem,\r\n  toggleModal\r\n}) {\r\n  function clickHandler() {\r\n    // sync the data of the specific item to the redux store\r\n    setViewingItem(item);\r\n    // hide the modal\r\n    toggleModal(\"view\");\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{date}</td>\r\n      <td>{quantity}</td>\r\n      <td>{income}</td>\r\n      <td>\r\n        <ViewDetailsButton\r\n          onClick={() => clickHandler(item)}\r\n          className=\"inventory-view-details-button\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nSalesTableItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    income: PropTypes.string.isRequired,\r\n    book: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      isbn: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setViewingItem,\r\n    toggleModal\r\n  }\r\n)(SalesTableItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport TableHeading from \"components/admin/sales/TableHeading\";\r\nimport SalesTableItem from \"components/admin/sales/SalesTableItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\nfunction SalesTable({ sales }) {\r\n  // isLoaded determines if the fetch firebase request is being processed\r\n  // isEmpty determines if the fetch firebase request has returned empty\r\n  // if the request is loading, display the spinner\r\n  // if the request is empty, display a title saying so\r\n  // else iterate over the data and display it\r\n  return (\r\n    <table>\r\n      <TableHeading />\r\n      <tbody>\r\n        {!isLoaded(sales) ? (\r\n          <tr className=\"spinner-row\">\r\n            <td>\r\n              <Spinner />\r\n            </td>\r\n          </tr>\r\n        ) : isEmpty(sales) ? (\r\n          <tr>\r\n            <td className=\"empty-table-cell\">\r\n              <h4>You have no recorded sales</h4>\r\n            </td>\r\n          </tr>\r\n        ) : (\r\n          sales.map(item => {\r\n            return <SalesTableItem item={item} key={item.id} />;\r\n          })\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nSalesTable.propTypes = {\r\n  sales: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { sales }\r\n  }\r\n}) => {\r\n  if (sales) {\r\n    return {\r\n      sales\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"sales\" }])\r\n)(SalesTable);\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Chart() {\r\n  // the data that will be passed into the LineChart\r\n  const data = {\r\n    // an array of dates\r\n    // in the future, this will be fed dates by various date getters\r\n    labels: [\"04/06\", \"05/06\", \"06/06\", \"07/06\", \"08/06\", \"09/06\", \"10/06\"],\r\n    datasets: [\r\n      {\r\n        label: \"Income per Day\",\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        // current data for the sales\r\n        // in the future this will be retrieved by a data request to firebase\r\n        data: [93.54, 103.45, 82.34, 132.93, 110.38, 190.43, 78.23]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          // display an axis title\r\n          scaleLabel: {\r\n            display: true,\r\n            fontSize: 16,\r\n            labelString: \"£ / Day\"\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          // display an axis title\r\n          scaleLabel: {\r\n            display: true,\r\n            fontSize: 16,\r\n            labelString: \"Date\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AdminTitle from \"components/titles/AdminTitle\";\r\nimport DropdownNavigation from \"components/navigation/DropdownNavigation\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport SalesTable from \"components/admin/sales/SalesTable\";\r\nimport SalesGraph from \"components/admin/sales/SalesGraph\";\r\nimport WidgetNavigation from \"components/navigation/WidgetNavigation\";\r\n\r\nfunction Sales({ modal_open, uid }) {\r\n  // if the user is not authenticated, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let component;\r\n  // if the redux store says that the modal should be open, display the modal\r\n  if (modal_open) component = <Modal />;\r\n\r\n  return (\r\n    <div className=\"admin-full-page-container\">\r\n      {component}\r\n      <div className=\"topbar-container\">\r\n        <DropdownNavigation />\r\n        <WidgetNavigation />\r\n      </div>\r\n      <div className=\"admin-content-container\">\r\n        <ErrorBoundary>\r\n          <AdminTitle value=\"Sales\" />\r\n          <div className=\"sales-page-content\">\r\n            <div className=\"recent-sales-table-container\">\r\n              <h2>Recent</h2>\r\n              <SalesTable />\r\n            </div>\r\n            <div className=\"sales-graph-container\">\r\n              <h2>Weekly Sales</h2>\r\n              <SalesGraph />\r\n            </div>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSales.propTypes = {\r\n  uid: PropTypes.string,\r\n  modal_open: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    modal_open,\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sales);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport PlusIcon from \"components/general/PlusIcon\";\r\n\r\nfunction AddMemberGroup({ toggleModal }) {\r\n  function clickHandler() {\r\n    // display the modal with type of 'add'\r\n    toggleModal(\"add\");\r\n  }\r\n  return (\r\n    <div className=\"add-member-group\" onClick={() => clickHandler()}>\r\n      <h2>Add Member</h2>\r\n      <PlusIcon />\r\n    </div>\r\n  );\r\n}\r\n\r\nAddMemberGroup.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    toggleModal\r\n  }\r\n)(AddMemberGroup);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\nimport ViewDetailsButton from \"components/buttons/ViewDetailsButton\";\r\n\r\nfunction StaffListMember({\r\n  member,\r\n  member: { imageLocation, firstName, surname, position, dob },\r\n  toggleModal,\r\n  setViewingItem\r\n}) {\r\n  function clickHandler() {\r\n    // sync the data for the member into the redux store\r\n    setViewingItem(member);\r\n    // toggle the modal, with the type of the modal set to view\r\n    toggleModal(\"view\");\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img\r\n          src={imageLocation}\r\n          className=\"staff-list-member-img\"\r\n          alt=\"profile\"\r\n        />\r\n      </td>\r\n      <td>\r\n        {firstName} {surname}\r\n      </td>\r\n      <td>{position}</td>\r\n      <td>{dob}</td>\r\n      <td>\r\n        <ViewDetailsButton onClick={() => clickHandler()} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nStaffListMember.propTypes = {\r\n  member: PropTypes.shape({\r\n    dob: PropTypes.string.isRequired,\r\n    firstName: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    surname: PropTypes.string.isRequired\r\n  }),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { setViewingItem, toggleModal }\r\n)(StaffListMember);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport StaffListMember from \"components/admin/staff/table/StaffListMember\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction StaffList({ data }) {\r\n  return (\r\n    <table className=\"staff-table\">\r\n      <thead>\r\n        <tr className=\"staff-table-headings\">\r\n          <td />\r\n          <td>Name</td>\r\n          <td>Position</td>\r\n          <td>DOB</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data ? (\r\n          data.map(member => {\r\n            return <StaffListMember member={member} key={member.id} />;\r\n          })\r\n        ) : (\r\n          <tr className=\"spinner-row\">\r\n            <td>\r\n              <Spinner />\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  if (state.firestore.ordered.staff) {\r\n    return {\r\n      data: state.firestore.ordered.staff\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"staff\", orderBy: \"surname\" }])\r\n)(StaffList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AddMemberGroup from \"components/admin/staff/AddMemberGroup\";\r\nimport AdminTitle from \"components/titles/AdminTitle\";\r\nimport DropdownNavigation from \"components/navigation/DropdownNavigation\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport StaffTable from \"components/admin/staff/table/StaffTable\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport WidgetNavigation from \"components/navigation/WidgetNavigation\";\r\n\r\nfunction Staff({ modal_open, permissions, uid }) {\r\n  // if the user is not authenticated, return them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let component;\r\n  // if the redux store says the modal should be open, display the modal\r\n  if (modal_open) component = <Modal />;\r\n\r\n  return (\r\n    <div className=\"admin-full-page-container\">\r\n      {component}\r\n      <div className=\"topbar-container\">\r\n        <DropdownNavigation />\r\n        <WidgetNavigation />\r\n      </div>\r\n      <div className=\"admin-content-container\">\r\n        <ErrorBoundary>\r\n          <AdminTitle value=\"Staff\" />\r\n          {permissions === \"all\" && <AddMemberGroup />}\r\n          <StaffTable />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nStaff.propTypes = {\r\n  uid: PropTypes.string,\r\n  modal_open: PropTypes.bool.isRequired,\r\n  permissions: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid },\r\n    profile: { permissions }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    uid,\r\n    modal_open,\r\n    permissions\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Staff);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction SearchItem({\r\n  item: {\r\n    author,\r\n    book,\r\n    company,\r\n    date,\r\n    dateFilled,\r\n    email,\r\n    firstName,\r\n    fullName,\r\n    genre,\r\n    imageLocation,\r\n    position,\r\n    publicationDate,\r\n    title,\r\n    toBeFilled\r\n  },\r\n  search_type\r\n}) {\r\n  // else if statements extracting the search type and return the appropriate seach value\r\n  if (search_type === \"inventory\") {\r\n    return (\r\n      <div className=\"search-item\">\r\n        <img className=\"search-item-img\" src={imageLocation} alt=\"book\" />\r\n        <p>{title}</p>\r\n        <p>{author}</p>\r\n        <p>{genre}</p>\r\n        <p>{publicationDate}</p>\r\n      </div>\r\n    );\r\n  } else if (search_type === \"staff\") {\r\n    return (\r\n      <div className=\"search-item\">\r\n        <img className=\"search-item-img\" src={imageLocation} alt={firstName} />\r\n        <p>{fullName}</p>\r\n        <p>{position}</p>\r\n        <p>{email}</p>\r\n      </div>\r\n    );\r\n  } else if (search_type === \"orders\") {\r\n    return (\r\n      <div className=\"search-item\">\r\n        <p>\r\n          {book.title} by {book.author}\r\n        </p>\r\n        <p>From: {company}</p>\r\n        <p>Ordered: {date}</p>\r\n        <p>\r\n          {toBeFilled ? `Arriving: ${toBeFilled}` : `Filled: ${dateFilled}`}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchItem.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ search: { search_type } }) => {\r\n  return {\r\n    search_type\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SearchItem from \"components/admin/search/SearchItem\";\r\n\r\nfunction SearchResults({ ordered: { search_data }, search_value }) {\r\n  let results;\r\n\r\n  if (search_data) {\r\n    if (search_data.length) {\r\n      results = (\r\n        <React.Fragment>\r\n          {search_data.map(item => (\r\n            <SearchItem key={item.id} item={item} />\r\n          ))}\r\n        </React.Fragment>\r\n      );\r\n    } else if (search_value) {\r\n      results = <h5 className=\"empty-search-message\">No results found!</h5>;\r\n    }\r\n  } else {\r\n    results = <div />;\r\n  }\r\n\r\n  return <React.Fragment>{results}</React.Fragment>;\r\n}\r\n\r\nSearchResults.propTypes = {\r\n  ordered: PropTypes.object.isRequired,\r\n  search_value: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: { ordered },\r\n  search: { search_value }\r\n}) => {\r\n  return { ordered, search_value };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(SearchResults);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSearchType } from \"actions/searchActions\";\r\n\r\nfunction SearchOptions({ setSearchType }) {\r\n  useEffect(() => {\r\n    return () => {\r\n      // on dismounting of the search options, set the type to null\r\n      // this prevents premature type determination on return to the page\r\n      setSearchType(null);\r\n    };\r\n  });\r\n\r\n  function clickHandler(e) {\r\n    // sync search type to redux store to allow search results to sync into which input was clicked\r\n    setSearchType(e.target.id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"input-label-group\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"settings\"\r\n          id=\"orders\"\r\n          onClick={e => clickHandler(e)}\r\n        />\r\n        <label htmlFor=\"orders\">Orders</label>\r\n      </div>\r\n      <div className=\"input-label-group\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"settings\"\r\n          id=\"staff\"\r\n          onClick={e => clickHandler(e)}\r\n        />\r\n        <label htmlFor=\"staff\">Staff</label>\r\n      </div>\r\n      <div className=\"input-label-group\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"settings\"\r\n          id=\"inventory\"\r\n          onClick={e => clickHandler(e)}\r\n        />\r\n        <label htmlFor=\"search\">Inventory</label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSearchOptions.propTypes = {\r\n  setSearchType: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { setSearchType }\r\n)(SearchOptions);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { setSearchValue } from \"actions/searchActions\";\r\n\r\nimport SearchIcon from \"components/general/SearchIcon\";\r\nimport SearchOptions from \"components/admin/search/SearchOptions\";\r\n\r\nfunction SearchSettings({\r\n  firestore,\r\n  search_type,\r\n  search_value,\r\n  setSearchValue\r\n}) {\r\n  useEffect(() => {\r\n    firestore.setListener({ collection: \"inventory\" });\r\n  });\r\n\r\n  // subscribe to changes in the search_type to determine which search option was clicked\r\n  // i.e: is the user looking to search through staff or the inventory or the orders?\r\n  switch (search_type) {\r\n    case \"staff\":\r\n      // query firebase NoSql database to return where the first name is equal to the value entered into the input\r\n      firestore.get({\r\n        collection: \"staff\",\r\n        where: [\"firstName\", \"==\", search_value],\r\n        storeAs: \"search_data\",\r\n        removeOnUnset: true\r\n      });\r\n      // also query if the full name equals the value entered into the search input\r\n      firestore.get({\r\n        collection: \"staff\",\r\n        where: [\"fullName\", \"==\", search_value],\r\n        // within the redux store, cache the returned data from this query under the name 'firstNameFiltered'\r\n        storeAs: \"search_data\"\r\n      });\r\n\r\n      break;\r\n\r\n    case \"inventory\":\r\n      firestore.get({\r\n        collection: \"books\",\r\n        where: [\"title\", \"==\", search_value],\r\n        storeAs: \"search_data\"\r\n      });\r\n      firestore.get({\r\n        collection: \"books\",\r\n        where: [\"author\", \"==\", search_value],\r\n        storeAs: \"search_data\"\r\n      });\r\n\r\n      break;\r\n\r\n    case \"orders\":\r\n      firestore.get({\r\n        collection: \"unfilledOrders\",\r\n        where: [\"date\", \"==\", search_value],\r\n        storeAs: \"search_data\"\r\n      });\r\n      firestore.get({\r\n        collection: \"filledOrders\",\r\n        where: [\"filledDate\", \"==\", search_value],\r\n        storeAs: \"search_data\"\r\n      });\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-bar-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          onChange={e => setSearchValue(e.target.value)}\r\n          placeholder={\r\n            // depending on what search option the user has selected\r\n            // the placeholder value for the input specifies the type of data to enter\r\n            search_type === \"orders\"\r\n              ? \"search orders by date...\"\r\n              : search_type === \"inventory\"\r\n              ? \"search by title or author...\"\r\n              : search_type === \"staff\"\r\n              ? \"search by member name...\"\r\n              : \"select a search option!\"\r\n          }\r\n          // if the user hasn't selected a database they want to search\r\n          // disable the search bar\r\n          disabled={search_type ? false : true}\r\n        />\r\n        <SearchIcon />\r\n      </div>\r\n      <div className=\"search-options\">\r\n        <SearchOptions />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSearchSettings.propTypes = {\r\n  firestore: PropTypes.object,\r\n  search_type: PropTypes.string,\r\n  search_value: PropTypes.string,\r\n  setSearchValue: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ search: { search_type, search_value } }) => {\r\n  return {\r\n    search_type,\r\n    search_value\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect(\r\n    mapStateToProps,\r\n    { setSearchValue }\r\n  )\r\n)(SearchSettings);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport AdminTitle from \"components/titles/AdminTitle\";\r\nimport DropdownNavigation from \"components/navigation/DropdownNavigation\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport SearchResults from \"components/admin/search/SearchResults\";\r\nimport SearchSettings from \"components/admin/search/SearchSettings\";\r\nimport WidgetNavigation from \"components/navigation/WidgetNavigation\";\r\n\r\nfunction Search({ uid }) {\r\n  // if the user is not authenticaed, redirect them to the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"admin-full-page-container\">\r\n      <div className=\"topbar-container\">\r\n        <DropdownNavigation />\r\n        <WidgetNavigation />\r\n      </div>\r\n      <div className=\"admin-content-container\">\r\n        <ErrorBoundary>\r\n          <AdminTitle value=\"Search\" />\r\n          <SearchSettings />\r\n          <div className=\"search-results-group\">\r\n            <SearchResults />\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearch.propTypes = {\r\n  uid: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  }\r\n}) => {\r\n  return {\r\n    uid\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ViewDetailsButton from \"components/buttons/ViewDetailsButton\";\r\n\r\nimport { setViewingItem, toggleModal } from \"actions/modalActions\";\r\n\r\nfunction InventoryItem({\r\n  item,\r\n  item: { title, author, quantity, imageLocation, salePrice },\r\n  setViewingItem,\r\n  toggleModal\r\n}) {\r\n  function clickHandler(item) {\r\n    // sync item data to redux store\r\n    setViewingItem(item);\r\n    // toggle the modal\r\n    toggleModal(\"view\");\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={imageLocation} className=\"iventory-item-img\" alt=\"book\" />\r\n      </td>\r\n      <td>{author}</td>\r\n      <td>{title}</td>\r\n      <td>{quantity}</td>\r\n      <td>{salePrice}</td>\r\n      <td>\r\n        <ViewDetailsButton onClick={() => clickHandler(item)} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nInventoryItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    author: PropTypes.string.isRequired,\r\n    isbn: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    salePrice: PropTypes.string.isRequired\r\n  }),\r\n  setViewingItem: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { setViewingItem, toggleModal }\r\n)(InventoryItem);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport InventoryItem from \"components/admin/inventory/table/InventoryItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction NoSearchTable({ books }) {\r\n  // this is the unfiltered version of the inventory table\r\n  // isLoaded function determines if the fetch request is processing\r\n  // isEmpty determines if the fetch request has returned empty\r\n  return (\r\n    <tbody>\r\n      {!isLoaded(books) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td>\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(books) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>You have no books in your inventory!</h4>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        books.map(item => {\r\n          return <InventoryItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { books }\r\n  }\r\n}) => {\r\n  if (books) {\r\n    return {\r\n      books\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"books\", orderBy: [\"author\"] }])\r\n)(NoSearchTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { isEmpty, isLoaded } from \"react-redux-firebase\";\r\n\r\nimport InventoryItem from \"components/admin/inventory/table/InventoryItem\";\r\nimport Spinner from \"components/general/Spinner\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction SearchTable({ authorFiltered, titleFiltered, searchVal }) {\r\n  // isLoaded function determines if the fetch request is processing\r\n  // isEmpty determines if the fetch request has returned empty\r\n  return (\r\n    <tbody>\r\n      {!isLoaded(authorFiltered) && !isLoaded(titleFiltered) ? (\r\n        <tr className=\"spinner-row\">\r\n          <td>\r\n            <Spinner />\r\n          </td>\r\n        </tr>\r\n      ) : isEmpty(authorFiltered) && isEmpty(titleFiltered) ? (\r\n        <tr>\r\n          <td className=\"empty-table-cell\">\r\n            <h4>{searchVal} returned no results!</h4>\r\n          </td>\r\n        </tr>\r\n      ) : authorFiltered.length ? (\r\n        authorFiltered.map(item => {\r\n          return <InventoryItem item={item} key={item.id} />;\r\n        })\r\n      ) : (\r\n        titleFiltered.map(item => {\r\n          return <InventoryItem item={item} key={item.id} />;\r\n        })\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nSearchTable.propTypes = {\r\n  authorFiltered: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string\r\n    })\r\n  ),\r\n  searchVal: PropTypes.string.isRequired,\r\n  titleFiltered: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { authorFiltered, titleFiltered }\r\n  }\r\n}) => {\r\n  if (authorFiltered && titleFiltered) {\r\n    return {\r\n      authorFiltered,\r\n      titleFiltered\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchTable);\r\n","import React from \"react\";\r\n\r\nfunction TableHeadings() {\r\n  return (\r\n    <thead>\r\n      <tr className=\"inventory-table-headings\">\r\n        <td />\r\n        <td>Author</td>\r\n        <td>Title</td>\r\n        <td>Quantity</td>\r\n        <td>Sale Price</td>\r\n        <td />\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeadings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NoSearchTable from \"components/admin/inventory/table/NoSearchTable\";\r\nimport SearchTable from \"components/admin/inventory/table/SearchTable\";\r\nimport TableHeadings from \"components/admin/inventory/table/TableHeadings\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction InventoryTable({ search_value }) {\r\n  // if there is a a search value then return a filtered version of the table\r\n  if (search_value) {\r\n    return (\r\n      <table className=\"inventory-table\">\r\n        <TableHeadings />\r\n        <SearchTable searchVal={search_value} />\r\n      </table>\r\n    );\r\n  } else {\r\n    // else return the unfiltered version of the table\r\n    return (\r\n      <table className=\"inventory-table\">\r\n        <TableHeadings />\r\n        <NoSearchTable />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nInventoryTable.propTypes = {\r\n  firestore: PropTypes.object,\r\n  search_value: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ search: { search_value } }) => {\r\n  return {\r\n    search_value\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InventoryTable);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nfunction InventoryProgressBar({ books }) {\r\n  useEffect(() => {\r\n    if (books) {\r\n      const fictionBar = document.querySelector(\r\n          \".inventory-progress-bar-fiction\"\r\n        ),\r\n        nonFictionBar = document.querySelector(\r\n          \".inventory-progress-bar-nonfiction\"\r\n        ),\r\n        totalBooks = books.length;\r\n\r\n      // array of fiction books\r\n      const fictionBookArr = books.filter(\r\n          book => book.genre === \"fiction\" || book.genre === \"Fiction\"\r\n        ),\r\n        // array of non fiction books\r\n        nonFictionBookArr = books.filter(\r\n          book => book.genre === \"non-fiction\" || book.genre === \"Non-Fiction\"\r\n        );\r\n\r\n      // work out the proportion of fiction books and proportion of non fiction books\r\n      fictionBar.style.width = `${(fictionBookArr.length / totalBooks) * 100}%`;\r\n      nonFictionBar.style.width = `${(nonFictionBookArr.length / totalBooks) *\r\n        100}%`;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"inventory-progress-bar-group\">\r\n      <div\r\n        className=\"inventory-progress-bar inventory-progress-bar-fiction\"\r\n        role=\"progressbar\"\r\n      >\r\n        &nbsp;\r\n      </div>\r\n      <div\r\n        className=\"inventory-progress-bar inventory-progress-bar-nonfiction\"\r\n        role=\"progressbar\"\r\n      >\r\n        &nbsp;\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInventoryProgressBar.propTypes = {\r\n  books: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      genre: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { books }\r\n  }\r\n}) => {\r\n  if (books) {\r\n    return {\r\n      books\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"books\" }])\r\n)(InventoryProgressBar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport { toggleModal } from \"actions/modalActions\";\r\n\r\nimport InventoryProgressBar from \"components/admin/inventory/InventoryProgressBar\";\r\nimport LinkButton from \"components/buttons/LinkButton\";\r\n\r\nfunction SummaryInfo({ books, toggleModal }) {\r\n  function onClickHandler() {\r\n    toggleModal(\"summary\");\r\n\r\n    document.addEventListener(\"click\", function clickFunction(e) {\r\n      // if you've clicked outside of the white modal box then toggle modal\r\n      // and remove click listener\r\n      if (e.target.contains(document.querySelector(\".modal-overlay\"))) {\r\n        toggleModal(\"\");\r\n\r\n        document.removeEventListener(\"click\", clickFunction);\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"inventory-summary-content-container\">\r\n      <h3>Total Books: {books && books.length}</h3>\r\n      <div className=\"inventory-summary-progress-bar-button\">\r\n        <InventoryProgressBar />\r\n        <LinkButton\r\n          value=\"See Inventory Summary\"\r\n          onClick={() => onClickHandler()}\r\n        />\r\n      </div>\r\n      <div className=\"inventory-summary-genre-item\">\r\n        <span className=\"circle\">&nbsp;</span>\r\n        <h5>Fiction</h5>\r\n        <span className=\"circle\">&nbsp;</span>\r\n        <h5>Non-Fiction</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSummaryInfo.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object),\r\n  toggleModal: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firestore: {\r\n    ordered: { books }\r\n  }\r\n}) => {\r\n  if (books) {\r\n    return {\r\n      books\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { toggleModal }\r\n  ),\r\n  firestoreConnect([{ collection: \"books\" }])\r\n)(SummaryInfo);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { setSearchValue } from \"actions/searchActions\";\r\n\r\nimport AdminTitle from \"components/titles/AdminTitle\";\r\nimport DropdownNavigation from \"components/navigation/DropdownNavigation\";\r\nimport ErrorBoundary from \"components/error-boundary/ErrorBoundary\";\r\nimport InventoryTable from \"components/admin/inventory/table/InventoryTable\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport SearchInputGroup from \"components/general/SearchInputGroup\";\r\nimport SummaryInfo from \"components/admin/inventory/SummaryInfo\";\r\nimport WidgetNavigation from \"components/navigation/WidgetNavigation\";\r\n\r\nfunction Inventory({ uid, modal_open }) {\r\n  // if the user is not authenticated, redirect him the login page\r\n  if (!uid) return <Redirect to=\"/\" />;\r\n\r\n  let component;\r\n  // if redux store says that the modal should be open, display the modal\r\n  if (modal_open) component = <Modal />;\r\n\r\n  return (\r\n    <div className=\"admin-full-page-container\">\r\n      {component}\r\n      <div className=\"topbar-container\">\r\n        <DropdownNavigation />\r\n        <WidgetNavigation />\r\n      </div>\r\n      <div className=\"admin-content-container inventory-content-container\">\r\n        <ErrorBoundary>\r\n          <AdminTitle value=\"Inventory\" />\r\n          <SummaryInfo />\r\n          <InventoryTable />\r\n          <SearchInputGroup\r\n            placeholder=\"Search by Author or Title\"\r\n            type=\"inventory\"\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInventory.propTypes = {\r\n  uid: PropTypes.string,\r\n  modal_open: PropTypes.bool.isRequired,\r\n  setSearchValue: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  firebase: {\r\n    auth: { uid }\r\n  },\r\n  modal: { modal_open }\r\n}) => {\r\n  return {\r\n    uid,\r\n    modal_open\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    setSearchValue\r\n  }\r\n)(Inventory);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Landing from \"components/pages/Landing\";\r\nimport Dashboard from \"components/pages/Dashboard\";\r\nimport Profile from \"components/pages/profile/Profile\";\r\nimport EditProfile from \"components/pages/profile/EditProfile\";\r\nimport Tasks from \"components/pages/profile/Tasks\";\r\nimport Events from \"components/pages/profile/Events\";\r\nimport Settings from \"components/pages/profile/Settings\";\r\nimport EditSettings from \"./components/pages/profile/EditSettings\";\r\nimport Orders from \"components/pages/admin/Orders\";\r\nimport Sales from \"components/pages/admin/Sales\";\r\nimport Staff from \"components/pages/admin/Staff\";\r\nimport Search from \"components/pages/admin/Search\";\r\nimport Inventory from \"components/pages/admin/Inventory\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/orinda-books\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n        <Route exact path=\"/profile/edit\" component={EditProfile} />\r\n        <Route exact path=\"/tasks\" component={Tasks} />\r\n        <Route exact path=\"/events\" component={Events} />\r\n        <Route exact path=\"/settings\" component={Settings} />\r\n        <Route exact path=\"/settings/edit\" component={EditSettings} />\r\n        <Route exact path=\"/orders\" component={Orders} />\r\n        <Route exact path=\"/staff\" component={Staff} />\r\n        <Route exact path=\"/sales\" component={Sales} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/inventory\" component={Inventory} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyA-B0QeVh9nEPbW1MS9UZ3pke5hhjiK9nk\",\r\n  authDomain: \"orinda-books.firebaseapp.com\",\r\n  databaseURL: \"https://orinda-books.firebaseio.com\",\r\n  projectId: \"orinda-books\",\r\n  storageBucket: \"orinda-books.appspot.com\",\r\n  messagingSenderId: \"401638197729\",\r\n  appId: \"1:401638197729:web:fdf288bbb461dc56\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import { LOGIN_ERROR, PASSWORD_RESET_ERROR } from \"actions/types\";\r\n\r\nconst initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        login_error: action.payload\r\n      };\r\n\r\n    case PASSWORD_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        password_error: action.payload\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { SET_EDIT_TYPE } from \"actions/types\";\r\n\r\nconst editReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_EDIT_TYPE:\r\n      return {\r\n        ...state,\r\n        edit_type: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default editReducer;\r\n","import { DETAIL_EVENT } from \"actions/types\";\r\n\r\nconst eventReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DETAIL_EVENT:\r\n      return {\r\n        ...state,\r\n        detail_event: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default eventReducer;\r\n","import {\r\n  SEARCH_TYPE,\r\n  SEARCH_VALUE,\r\n  SECONDARY_SEARCH_VALUE\r\n} from \"actions/types\";\r\n\r\nconst initialState = {\r\n  search_value: \"\",\r\n  secondary_search_value: \"\"\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_TYPE:\r\n      return {\r\n        ...state,\r\n        search_type: action.payload\r\n      };\r\n\r\n    case SEARCH_VALUE:\r\n      return {\r\n        ...state,\r\n        search_value: action.payload\r\n      };\r\n\r\n    case SECONDARY_SEARCH_VALUE:\r\n      return {\r\n        ...state,\r\n        secondary_search_value: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { SET_MODAL_TYPE, TOGGLE_MODAL, VIEW_ITEM } from \"actions/types\";\r\n\r\nconst initialState = { modal_open: false };\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modal_type: action.payload\r\n      };\r\n\r\n    case TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        modal_open: !state.modal_open,\r\n        modal_type: action.payload\r\n      };\r\n\r\n    case VIEW_ITEM:\r\n      return {\r\n        ...state,\r\n        view_item: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nimport authReducer from \"reducers/authReducer\";\r\nimport editReducer from \"reducers/editReducer\";\r\nimport eventReducer from \"reducers/eventReducer\";\r\nimport searchReducer from \"reducers/searchReducer\";\r\nimport modalReducer from \"reducers/modalReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  edit: editReducer,\r\n  events: eventReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  search: searchReducer,\r\n  modal: modalReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nimport firebaseConfig from \"config/firebaseConfig\";\r\nimport rootReducer from \"reducers\";\r\n\r\nconst rrfConfig = {\r\n  attachAuthIsReady: true,\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig),\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/search.8817ca0e.png\";","module.exports = __webpack_public_path__ + \"static/media/orders.4304f432.png\";","module.exports = __webpack_public_path__ + \"static/media/staff.49153feb.png\";","module.exports = __webpack_public_path__ + \"static/media/sales.0bc27cf2.png\";","module.exports = __webpack_public_path__ + \"static/media/inventory.9eec37f0.png\";"],"sourceRoot":""}